{"version":3,"sources":["redux/action/types-action.js","redux/reducers/login-reducer.js","redux/store/preloaded-state-store.js","redux/reducers/register-reducer.js","redux/reducers/people-reducer.js","redux/reducers/app-reducer.js","redux/reducers/messenger-reducer.js","redux/reducers/matchs-reducer.js","redux/reducers/root-reducer.js","redux/store/middleware-store.js","redux/store/matcha-store.js","react/modules/private-route.js","react/modules/public-route.js","react/entry.js","react/modules/utils.js","env.js","redux/action/app-action.js","redux/action/people-action.js","react/gallery.js","react/gallery-settings.js","react/home.js","react/modules/options-dates.js","react/components/map.js","react/components/address-form.js","react/user.js","react/profile.js","react/login.js","redux/action/login-action.js","react/register.js","redux/action/register-action.js","react/error.js","react/components/notifications.js","react/components/navbar.js","react/components/nav-buttons.js","react/navigation.js","react/valid-email.js","redux/action/messenger-action.js","react/messenger-components/ConversationList/index.js","react/messenger-components/Message/index.js","react/messenger-components/MessageList/message-input.js","react/messenger-components/MessageList/message-list.js","redux/action/matchs-action.js","react/messenger-mobile/ConversationList/index.js","react/messenger-mobile/Message/index.js","react/messenger-mobile/MessageList/message-input.js","react/messenger-mobile/MessageList/message-list.js","react/messenger-mobile/switcher.js","react/messenger.js","react/forgot.js","react/matchs.js","react/history.js","react/reset-password.js","App.js","serviceWorker.js","index.js"],"names":["LOGIN","LOGIN_FAIL","LOGOUT","REGISTER","REGISTER_FAIL","LOAD_PEOPLE","NO_PEOPLE","UPDATE_FILTERS","dislike","like","block","UPDATE_PROFILE","ADD_TAG","LOAD_USER","ENABLE_FIELD","DISABLE_FIELD","UPDATE_SUITOR","INCR_I","ADD_MESSAGE","LOAD_MATCHS","initial","parseToken","file","localStorage","getItem","undefined","JwtDecode","removeItem","registerPreloaded","valid","fail","username","status","message","email","password","confirm","lastname","firstname","birthday","other","type","peoplePreloaded","filters","age","score","location","param","tags","isLoading","done","data","loginPreloaded","Object","objectSpread","loggedIn","token","exp","Date","now","stillLogged","err","wsApi","wsUrl","id","messengerPreloaded","suitorId","url","ws","WebSocket","i","messages","preloadedState","login","register","people","_","merge","app","profileId","field","tagList","key","text","value","user","access_lvl","biography","city","country","genre","geo_allowed","img1","img2","img3","img4","img5","interest","latitude","longitude","name","online","rating","zip","userTags","messenger","matchs","NodeIdentity","Labels","Properties","allReducer","combineReducers","state","arguments","length","action","middleware","thunk","middlewares","compose","applyMiddleware","apply","store","createStore","withRouter","connect","_ref","Component","component","rest","objectWithoutProperties","react_default","a","createElement","react_router","assign","render","props","getState","to","pathname","from","PublicRoute","Entry","getAge","iso","dateold","datenew","ynew","getFullYear","mnew","getMonth","dnew","getDate","yold","mold","dold","diff","env","appName","api","auth","updateProfileAction","prev","dispatch","userModifyAction","body","keys","FormData","append","init","method","headers","Authorization","fetch","then","res","json","imgCase","jsonBody","JSON","stringify","userAction","enableFieldAction","disableFieldAction","peopleAction","getPeopleAction","Filters","updateFiltersAction","Gallery","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","Fragment","map","person","Card","onClick","e","handleClick","Image","src","size","Content","Header","Meta","className","bind","assertThisInitialized","history","push","Container","Dimmer","active","Loader","Divider","Responsive","as","Segment","onlyMobile","Group","itemsPerRow","onlyTablet","onlyComputer","Handle","Slider","handle","unit","dragging","index","restProps","rc_tooltip_es","prefixCls","overlay","visible","placement","GallerySettings","handleTagsChange","handleChange","setState","defineProperty","zut","newtag","applyFilters","r","step","max","_this2","Grid","Column","mobile","tablet","computer","startCase","rc_slider_es","allowCross","defaultValue","onChange","min","style","border","trackStyle","backgroundColor","handleStyle","borderColor","railStyle","_this3","Row","columns","intervalCol","Dropdown","placeholder","fluid","search","multiple","selection","options","Button","color","React","Home","gallery_settings","gallery","days","months","years","arr","toString","y","genders","Mapp","lat","lng","zoom","position","Map","center","TileLayer","attribution","Marker","Popup","AddressForm","street","show","api_id","api_code","error","errMessage","geocoder","returnError","setTimeout","Message_Message","_this4","tab","s","str","s1","s2","joinAll","split","join","handleError","Response","View","pos","Result","Location","DisplayPosition","Latitude","Longitude","ret","hc","map_Mapp","Input","label","Tags","tag","fields","title","view","entries","Form","TextArea","minHeight","address_form_AddressForm","Select","dateStr","date","day","monthIndex","year","formatDate","width","user_Tags","htc","user_View","user_UploadImage","hfc","UploadImage","Label","basic","htmlFor","icon","content","labelPosition","accept","hidden","Field","modify","entry","save","Mess","User","handleFileChange","target","files","handleTagChange","user_Mess","msg","user_Field","Online","display","Icon","seconds","Math","floor","interval","timeSince","lastConn","Profile","profile","relation","loaded","socket","self","onopen","event","onmessage","parse","close","padding","ilike","profile_Online","last_conn","vertical","circular","disabled","Or","Login","handleToggle","checked","gender","geo","month","submit","preventDefault","formData","credentials","setItem","jwtDecode","loginAction","negative","attached","lgn","textAlign","height","verticalAlign","maxWidth","stacked","iconPosition","alertMessage","href","Register","registerAction","reg","Error401","redirect","Notification","notif","deleteMe","Notifications","isOpen","author","author_id","subject","subject_id","concat","toConsumableArray","filter","obj","handleOpen","handleClose","clearTimeout","timeout","Popup_Popup","on","open","onClose","onOpen","trigger","Menu","Item","header","flowing","centered","divided","n","notifications_Notification","widths","pointing","secondary","buttons","home","img","avatar","item","notifications","logout","mobileButtons","sizeActive","computerButtons","rows","paddingTop","sendPosition","Navigation","nextProps","nextState","nextContext","navigator","geolocation","getCurrentPosition","updatePosition","geoDeniedPosition","coords","long","code","PERMISSION_DENIED","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","next","t0","publicIp","v4","t1","sent","stop","navbar","getJsonFromUrl","window","query","substr","result","forEach","part","decodeURIComponent","ValidEmail","class","snack","updateSuitorAction","prevState","userId","User-Id","Suitor-Id","b","newUrl","incrementMessageAction","addMessageAction","newMessage","ConversationList","selectSuitor","alt","Message","_this$props","isMine","startsSequence","endsSequence","showTimestamp","friendlyTimestamp","moment","timestamp","format","rand","random","MessageInput","keyDown","send","test","new","getTime","bottom","onKeyDown","autoComplete","MessageList","renderMessages","react_messenger_components_Message_Message","scrollToBottom","el","scrollIntoView","behavior","ref","message_input","getMatchsAction","toMsgList","left","toConvList","right","react_messenger_mobile_Message_Message","MessageList_message_input","Switcher","convList","messenger_mobile_ConversationList","MessageList_message_list","Messenger","document","overflow","switcher","messenger_components_ConversationList","message_list","Forgot","Matchs","Comp","events","ResetPassword","reset_token","reset_password_Mess","App","es","react_router_dom","navigation","exact","path","private_route","History","Error","public_route","Boolean","hostname","match","ReactDOM","src_App","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.45233597.chunk.js","sourcesContent":["export const LOGIN = 'LOGIN';\nexport const LOGIN_FAIL = 'LOGIN_FAIL';\nexport const LOGOUT = 'LOGOUT';\n\nexport const LOAD = 'LOAD';\nexport const REGISTER = 'REGISTER';\nexport const REGISTER_FAIL = 'REGISTER_FAIL';\n\nexport const LOAD_PEOPLE = 'LOAD_PEOPLE';\nexport const NO_PEOPLE = 'NO_PEOPLE';\nexport const UPDATE_FILTERS = 'UPDATE_FILTERS';\nexport const dislike = 'dislike';\nexport const like = 'like';\nexport const block = 'block';\n\n\nexport const UPDATE_PROFILE = 'UPDATE_PROFILE';\nexport const ADD_TAG = 'ADD_TAG';\nexport const LOAD_USER = 'LOAD_USER';\nexport const CHANGE_USER = 'CHANGE_USER';\nexport const ENABLE_FIELD = 'ENABLE_FIELD';\nexport const DISABLE_FIELD = 'DISABLE_FIELD';\n\nexport const LOAD_HISTORY_MESSENGER = 'LOAD_HISTORY_MESSENGER';\nexport const UPDATE_SUITOR = 'UPDATE_SUITOR';\nexport const INCR_I = 'INCR_I';\nexport const ADD_MESSAGE = 'ADD_MESSAGE';\n\nexport const LOAD_MATCHS = 'LOAD_MATCHS';\n","import {LOGIN, LOGIN_FAIL, LOGOUT} from \"../action/types-action\";\n\nconst initial = () => {\n};\n\nexport function loginReducer (state = initial, action) {\n    switch (action.type) {\n        case LOGIN:\n            return {\n                ...action,\n                loggedIn: true,\n                err: {status: false, message: \"\"}\n            };\n        case LOGIN_FAIL:\n            return {\n                loggedIn: false,\n                err: action.err\n            };\n        case LOGOUT:\n            return {\n                loggedIn: false,\n                err: {status: false, message: \"\"}\n            };\n        default:\n            return state\n    }\n}\n","import JwtDecode from 'jwt-decode'\nimport _ from 'lodash'\n\nconst parseToken = (file) => {\n    if (!localStorage.getItem(file) || !localStorage.getItem(file) === undefined) {\n        localStorage.removeItem(file);\n        return null\n    } else {\n        return JwtDecode(localStorage.getItem(file))\n    }\n};\n\nconst stillLogged = (file) => {\n    const token = parseToken(file);\n    if (!token) {\n        return false\n    } else if (token.exp < Date.now() / 1000) {\n        localStorage.removeItem(file);\n        return false\n    }\n    return true\n};\n\nexport const registerPreloaded = {\n    valid: false,\n    fail: false,\n    username: {\n        status: true,\n        message: \"\"\n    },\n    email: {\n        status: true,\n        message: ''\n    },\n    password: {\n        status: true,\n        message: ''\n    },\n    confirm: {\n        status: true,\n        message: ''\n    },\n    lastname: {\n        status: true,\n        message: ''\n    },\n    firstname: {\n        status: true,\n        message: ''\n    },\n    birthday: {\n        status: true,\n        message: ''\n    },\n    other: {\n        status: true,\n        message: ''\n    },\n    type: ''\n};\n\nexport const peoplePreloaded = {\n    filters: {\n\n        age: [16, 120],\n        score : [0, 100],\n        location: [0 , 16000],\n        param : false,\n        tags: [],\n    },\n    isLoading: true,\n    done: false,\n    data: [],\n};\n\nexport const loginPreloaded = {\n    ...parseToken('jwt'),\n    loggedIn: stillLogged('jwt'),\n    err: {status: false, message: \"\"},\n};\n\nexport const appPreloaded = {\n    profileId: -1,\n    field: null,\n    tagList: [\n        { key: 'angular', text: '#Angular', value: 'angular' },\n    ],\n    user: {\n        access_lvl: 1,\n        biography: null,\n        birthday: null,\n        city: null,\n        country: null,\n        email: null,\n        firstname: null,\n        genre: null,\n        geo_allowed: null,\n        img1: null,\n        img2:null,\n        img3:null,\n        img4:null,\n        img5:null,\n        interest:null,\n        lastname:null,\n        latitude: 0,\n        longitude: 0,\n        name:null,\n        online:null,\n        rating: null,\n        username: null,\n        zip: null,\n        userTags: [],\n    }\n};\n\nexport const wsApi = \"ws://localhost:8181/api/ws/\";\nexport const wsUrl = wsApi + loginPreloaded.id + \"/\" + loginPreloaded.id;\nexport const messengerPreloaded = {\n    suitorId: -1,\n    url : wsUrl,\n    ws : new WebSocket(wsUrl),\n    i: 0,\n    messages: [],\n};\n\nconst preloadedState = {\n    login : loginPreloaded,\n    register: registerPreloaded,\n    people: _.merge({}, peoplePreloaded),\n    app: appPreloaded,\n    messenger: messengerPreloaded,\n    matchs: [\n        {\n            NodeIdentity: -1,\n            Labels: [\n                'User'\n            ],\n            Properties: {\n                access_lvl: 0,\n                biography: '',\n                birthday: '',\n                city: '',\n                country: '',\n                email: '',\n                firstname: '',\n                genre: '',\n                geo_allowed: false,\n                img1: '',\n                img2: '',\n                img3: '',\n                img4: '',\n                img5: '',\n                interest: '',\n                lastname: '',\n                latitude: 0,\n                longitude: 0,\n                name: '',\n                online: true,\n                rating: 0,\n                username: '',\n                zip: ''\n            }\n        },\n    ],\n};\n\nexport default preloadedState;","import {REGISTER, REGISTER_FAIL} from \"../action/types-action\";\nimport {registerPreloaded} from \"../store/preloaded-state-store\";\n\nconst initial = () => {\n\n};\n\nexport function registerReducer (state = initial, action) {\n    switch (action.type) {\n        case REGISTER:\n            return registerPreloaded;\n        case REGISTER_FAIL:\n            return action;\n        default:\n            return state\n    }\n}\n","import {block, dislike, like, LOAD_PEOPLE, NO_PEOPLE, UPDATE_FILTERS} from \"../action/types-action\";\n\nconst initial = () => {\n\n};\n\nexport function peopleReducer (state = initial, action) {\n    switch (action.type) {\n        case like:\n            return ({\n                ...action,\n            });\n        case dislike:\n            return ({\n                ...action,\n            });\n        case block:\n            return ({\n                ...action,\n            });\n        case UPDATE_FILTERS:\n            return ({\n                ...action,\n            });\n        case NO_PEOPLE:\n            return ({\n                data: [],\n                isLoading: false,\n                filters: action.filters,\n                done: false,\n                err: action.err,\n            });\n        case LOAD_PEOPLE:\n            return ({\n                data: action.data,\n                filters: action.filters,\n                isLoading: false,\n                done: true,\n            });\n        default:\n            return state\n    }\n}\n","import {ADD_TAG, DISABLE_FIELD, ENABLE_FIELD, LOAD_USER, UPDATE_PROFILE} from \"../action/types-action\";\n\nconst initial = () => {\n};\n\nexport function appReducer (state = initial, action) {\n    switch (action.type) {\n        case ADD_TAG:\n            return {\n                ...action,\n            };\n        case LOAD_USER:\n            return {\n                ...action,\n                user : {\n                    ...action.user,\n                    userTags: action.userTags\n                },\n                field: null,\n            };\n        case DISABLE_FIELD:\n            return {\n                ...action,\n                field: null,\n            };\n        case ENABLE_FIELD:\n            return {\n                ...action,\n            };\n        case UPDATE_PROFILE:\n            return {\n                ...action,\n            };\n        default:\n            return state\n    }\n}\n","import {ADD_MESSAGE, INCR_I, UPDATE_SUITOR} from \"../action/types-action\";\n\nconst initial = () => {\n};\n\nexport function messengerReducer (state = initial, action) {\n    switch (action.type) {\n        case UPDATE_SUITOR:\n            return ({\n                ...action,\n                suitorId: action.suitorId,\n                type: null,\n            });\n        case INCR_I:\n            return ({\n                ...action,\n                i: action.i,\n            });\n        case ADD_MESSAGE:\n            return ({\n                ...action,\n                messages: action.messages,\n            });\n        default:\n            return state\n    }\n}\n","import {LOAD_MATCHS} from \"../action/types-action\";\n\nconst initial = () => {\n\n};\n\nexport function matchsReducer (state = initial, action) {\n    switch (action.type) {\n        case LOAD_MATCHS:\n            return (action.data);\n        default:\n            return state\n    }\n}\n","import {combineReducers} from \"redux\";\nimport {loginReducer} from './login-reducer';\nimport {registerReducer} from \"./register-reducer\";\nimport {peopleReducer} from \"./people-reducer\";\nimport {appReducer} from \"./app-reducer\";\nimport {messengerReducer} from \"./messenger-reducer\";\nimport {matchsReducer} from \"./matchs-reducer\";\nimport {LOGOUT} from \"../action/types-action\";\nimport preloadedState from \"../store/preloaded-state-store\";\n\nconst allReducer = combineReducers({\n    login: loginReducer,\n    register: registerReducer,\n    people: peopleReducer,\n    app: appReducer,\n    messenger: messengerReducer,\n    matchs: matchsReducer,\n});\n\nexport const rootReducer = (state, action) => {\n    if (action.type === LOGOUT) {\n        state = preloadedState\n    }\n    return allReducer(state, action)\n};\n","import thunk from 'redux-thunk';\nimport {applyMiddleware, compose} from 'redux';\nimport logger from 'redux-logger';\n\nconst middleware = [thunk];\nconst middlewares = compose(\n\n    applyMiddleware(...middleware),\n    // window.devToolsExtension ? window.devToolsExtension() : f => f\n);\n\nexport default middlewares;\n","import {rootReducer} from '../reducers/root-reducer';\nimport { createStore} from 'redux';\nimport preloadedState from './preloaded-state-store';\nimport middlewares from \"./middleware-store\";\n\nconst store = createStore(\n    rootReducer,\n    preloadedState,\n    middlewares,\n);\n\n\nexport default store;\n","import React from 'react';\nimport {Route, Redirect} from  'react-router-dom';\nimport store from '../../redux/store/matcha-store';\nimport {withRouter} from \"react-router-dom\"\nimport {connect} from \"react-redux\";\n\nfunction logged () {\n    return store.getState().login.loggedIn\n}\n\nconst PrivateRoute= ({ component: Component, ...rest }) => (\n    <Route\n        {...rest}\n        render={props =>\n            logged() ? (\n                <Component {...props} />\n            ) : (\n                <Redirect\n                    to={{\n                        pathname: \"/login\",\n                        state: { from: props.location }\n                    }}\n                />\n            )\n        }\n    />\n);\n\nconst mapStateToProps = (state) => {\n    return {\n        login: state.login,\n    };\n};\n\nexport default withRouter(connect(mapStateToProps)(PrivateRoute))\n","import React from 'react';\nimport {Route, Redirect} from  'react-router-dom';\nimport store from '../../redux/store/matcha-store'\n\nfunction logged () {\n    return store.getState().login.loggedIn\n}\n\nconst PublicRoute= ({ component: Component, ...rest }) => (\n    <Route\n        {...rest}\n        render={props =>\n            !logged(props) ? (\n                <Component {...props} />\n            ) : (\n                <Redirect\n                    to={{\n                        pathname: \"/\",\n                        state: { from: props.location }\n                    }}\n                />\n            )\n        }\n    />\n);\n\nexport default PublicRoute\n","import React, {} from 'react';\nimport {Route, Redirect} from  'react-router-dom';\nimport store from '../redux/store/matcha-store'\n\nfunction logged () {\n    return store.getState().login.loggedIn\n}\n\n\nconst Entry = ({ component: Component, ...rest }) => (\n    <Route\n        {...rest}\n        render={props =>\n            logged(props) ? (\n                <Redirect\n                    to={{\n                        pathname: \"/home\",\n                        state: { from: props.location }\n                    }}\n                />\n            ) : (\n                <Redirect\n                    to={{\n                        pathname: \"/login\",\n                        state: { from: props.location }\n                    }}\n                />\n            )\n        }\n    />\n);\n\nexport default Entry\n","export const getAge = (iso) =>  {\n    const dateold = new Date(iso);\n    const datenew = new Date();\n    var ynew = datenew.getFullYear();\n    var mnew = datenew.getMonth();\n    var dnew = datenew.getDate();\n    var yold = dateold.getFullYear();\n    var mold = dateold.getMonth();\n    var dold = dateold.getDate();\n    var diff = ynew - yold;\n    if(mold > mnew) diff--;\n    else\n    {\n        if(mold === mnew)\n        {\n            if(dold > dnew) diff--;\n        }\n    }\n    return diff;\n};\n\nexport function timeSince(date) {\n    date = new Date(date);\n\n    var seconds = Math.floor((new Date() - date) / 1000);\n\n    var interval = Math.floor(seconds / 31536000);\n\n    if (interval > 1) {\n        return interval + \" years\";\n    }\n    interval = Math.floor(seconds / 2592000);\n    if (interval > 1) {\n        return interval + \" months\";\n    }\n    interval = Math.floor(seconds / 86400);\n    if (interval > 1) {\n        return interval + \" days\";\n    }\n    interval = Math.floor(seconds / 3600);\n    if (interval > 1) {\n        return interval + \" hours\";\n    }\n    interval = Math.floor(seconds / 60);\n    if (interval > 1) {\n        return interval + \" minutes\";\n    }\n    return Math.floor(seconds) + \" seconds\";\n}\n","const env = {\n    appName : \"42Matcha\",\n    api: \"http://localhost:8181/api\",\n    auth: \"http://localhost:8181/auth\",\n};\n\nexport default env;","import {DISABLE_FIELD, ENABLE_FIELD, LOAD_USER, UPDATE_PROFILE} from \"./types-action\";\nimport env from \"../../env\";\n\nexport const updateProfileAction = (prev, id, i) => dispatch => {\n    dispatch({\n        ...prev,\n        type: UPDATE_PROFILE,\n        profileId: id,\n        i: i,\n    });\n};\n\nconst imgCase = (prev, body, name, dispatch) =>  {\n    let data = new FormData();\n    data.append('file', body.file);\n    let init = {\n        method: \"POST\",\n        body: data,\n        headers : {\n            'Authorization': localStorage.getItem('jwt'),\n        },\n    };\n    fetch(env.api + '/img/' + name, init)\n        .then(res => {\n                switch (res.status) {\n                    case 201:\n                        res.json().then(json =>{\n                        });\n                        break;\n                    case 200:\n                        res.json().then(data =>{\n                            dispatch({\n                                ...prev,\n                                type: LOAD_USER,\n                                user: data.user.Properties,\n                                tagList: data.tagList,\n                            });\n                        });\n                        break;\n                    default:\n                        break\n                }\n            }\n        )\n};\n\nexport const userModifyAction = (prev, body, name) => dispatch => {\n    if (Object.keys(body)[0] === 'file') {\n        imgCase(prev, body, name, dispatch);\n    } else {\n        const jsonBody = JSON.stringify(body);\n        let init = {\n            method: 'PUT',\n            headers: {\n                'Authorization': localStorage.getItem('jwt'),\n            },\n            body: jsonBody,\n        };\n        fetch(env.api + '/user/' + name, init)\n            .then(res => {\n                    switch (res.status) {\n                        case 201:\n                            res.json().then(json =>{\n                            });\n                            break;\n                        case 200:\n                            res.json().then(data =>{\n                                dispatch({\n                                    ...prev,\n                                    type: LOAD_USER,\n                                    user: data.user.Properties,\n                                    tagList: data.tagList,\n                                    userTags: data.userTags,\n                                });\n                            });\n                            break;\n                        default:\n                            break;\n                    }\n                }\n            )\n    }\n\n};\n\nexport const userAction = (prev) => dispatch => {\n    let init = {\n        method: 'GET',\n        headers:{\n            'Authorization': localStorage.getItem('jwt'),\n        }\n    };\n    fetch(env.api + '/user', init)\n        .then(res => {\n                switch (res.status) {\n                    case 201:\n                        break;\n                    case 202:\n                        break;\n                    case 203:\n                        break;\n                    case 204:\n                        break;\n                    case 200:\n                        res.json().then(data => {\n                            dispatch({\n                                ...prev,\n                                type: LOAD_USER,\n                                user: data.user.Properties,\n                                tagList: data.tagList,\n                                userTags: data.userTags,\n                            });\n                        });\n                        break;\n                    default:\n                        break;\n                }\n            }\n        )\n};\n\nexport const enableFieldAction = (prev, field) => dispatch => {\n    dispatch({\n        ...prev,\n        type: ENABLE_FIELD,\n        field: field,\n    });\n};\n\nexport const disableFieldAction = (prev) => dispatch => {\n    dispatch({\n        ...prev,\n        type: DISABLE_FIELD,\n    });\n};\n","import {LOAD_PEOPLE, NO_PEOPLE, UPDATE_FILTERS} from './types-action';\nimport env from \"../../env\";\n\nexport const peopleAction = (prev, id, action) => dispatch => {\n    let init = {\n        method: 'PUT',\n        body: {},\n        headers:{\n            'Authorization': localStorage.getItem('jwt'),\n        }\n    };\n    fetch(env.api + '/people/' + id + \"/\" + action, init)\n        .then(res => {\n                switch (res.status) {\n                    case 200:\n                        res.json().then(json => {\n                            dispatch({\n                                ...prev,\n                                type: action,\n                            })\n                        });\n                        break;\n                    case 201:\n                        res.json().then(json =>{\n                        });\n                        break;\n                    case 202:\n                        res.json().then(json =>{\n                        });\n                        break;\n                    default:\n                        break;\n                }\n            }\n        )\n};\n\nexport const getPeopleAction = (filters, param) => dispatch => {\n    let init = {\n        method: 'GET',\n        headers:{\n            'Authorization': localStorage.getItem('jwt'),\n            'Filters': JSON.stringify(filters),\n        }\n    };\n    fetch(env.api + '/people/' + param, init)\n        .then(res => {\n                switch (res.status) {\n                    case 201:\n                            dispatch({\n                                type: NO_PEOPLE,\n                                filters: filters,\n                            });\n                        break;\n                    case 202:\n                        localStorage.removeItem('jwt');\n                        res.json().then(json =>{\n                        });\n                        break;\n                    case 200:\n                        res.json().then(data => {\n                            dispatch({\n                                type: LOAD_PEOPLE,\n                                data: data,\n                                filters: filters,\n                            });\n                        });\n                        break;\n                    default:\n                        break;\n                }\n            }\n        )\n};\n\nexport const updateFiltersAction = (prev, filters) => dispatch => {\n    dispatch({\n        ...prev,\n        type: UPDATE_FILTERS,\n        filters: filters,\n    });\n};\n","import React, {Component} from \"react\";\nimport {withRouter} from \"react-router-dom\"\nimport {connect} from \"react-redux\";\nimport {getAge} from \"./modules/utils\";\nimport {\n    Divider,\n    Segment,\n    Container,\n    Dimmer,\n    Loader,\n    Responsive,\n    Card,\n    Image,\n} from 'semantic-ui-react';\nimport {updateProfileAction} from \"../redux/action/app-action\";\nimport {getPeopleAction} from \"../redux/action/people-action\";\n\nclass Gallery extends Component {\n    constructor(props) {\n        super(props);\n        this.handleClick = this.handleClick.bind(this);\n        props.dispatch(getPeopleAction(props.people.filters, \"false\"));\n    }\n    state = {\n        i : 0,\n    };\n    handleClick (e, id, i) {\n        this.props.dispatch(updateProfileAction(this.props.app, id, i));\n        this.props.history.push('/profile');\n    }\n    people = () => (\n        <>\n            {this.props.people.data.map((person, i) => (\n                  <Card key={person.NodeIdentity} onClick={e => this.handleClick(e, person.NodeIdentity, i)}>\n                      <Image src={person.Properties.img1} size='big'/>\n                      <Card.Content>\n                          <Card.Header>{person.Properties.username}</Card.Header>\n                          <Card.Meta>\n                              <span className='date'>{getAge(person.Properties.birthday)}</span>\n                              <p>{person.Properties.firstname} {person.Properties.lastname}</p>\n                          </Card.Meta>\n                      </Card.Content>\n                  </Card>\n            ))}</>\n    );\n    render () {\n        if (this.props.people.done) {\n        return (\n            <Container className={\"gallery\"}>\n                <Dimmer active={this.props.people.isLoading}>\n                    <Loader>Loading</Loader>\n                </Dimmer>\n                <Divider/>\n                <Responsive as={Segment} {...Responsive.onlyMobile}>\n                    <Card.Group itemsPerRow={1}>{this.people()}</Card.Group>\n                </Responsive>\n                <Responsive as={Segment} {...Responsive.onlyTablet}>\n                    <Card.Group itemsPerRow={3}>{this.people()}</Card.Group>\n                </Responsive>\n                <Responsive as={Segment} {...Responsive.onlyComputer}>\n                    <Card.Group itemsPerRow={4}>{this.people()}</Card.Group>\n                </Responsive>\n            </Container>\n        )\n        } else {\n           return (<p>{this.props.people.err}</p>)\n        }\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        people: state.people,\n        login: state.login,\n        app: state.app,\n    };\n};\n\nexport default withRouter(connect(mapStateToProps)(Gallery))\n","import React from \"react\";\nimport {withRouter} from \"react-router-dom\"\nimport {connect} from \"react-redux\";\nimport {\n    Segment,\n    Header,\n    Button,\n    Dropdown,\n    Grid,\n} from 'semantic-ui-react';\nimport Slider, { Range } from 'rc-slider';\nimport 'rc-slider/assets/index.css';\nimport {getPeopleAction, updateFiltersAction} from \"../redux/action/people-action\";\nimport {peoplePreloaded} from \"../redux/store/preloaded-state-store\";\nimport _ from 'lodash';\nimport Tooltip from 'rc-tooltip';\n\nconst Handle = Slider.Handle;\nconst handle = (props, unit) => {\n    const { value, dragging,  index, ...restProps} = props;\n    return (\n        <Tooltip\n            prefixCls=\"rc-slider-tooltip\"\n            overlay={value}\n            visible={dragging}\n            placement=\"top\"\n            key={index}\n        >\n            <Handle value={value} {...restProps} />\n        </Tooltip>\n    );\n};\n\nclass GallerySettings extends React.Component {\n    constructor(props) {\n        super(props);\n        this.zut = this.zut.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n        this.state = {\n            newtag: \"\",\n            tags: []\n        };\n        this.applyFilters = this.applyFilters.bind(this);\n    }\n    zut(r, name) {\n        let filters = this.props.people.filters;\n        filters[name] = r;\n    }\n    intervalCol(name, step, unit, max) {\n        return (\n            <Grid.Column mobile={16} tablet={16} computer={5}>\n                <Header as={'h4'}>{_.startCase(name)}</Header>\n                <Range\n                    unit={unit}\n                    allowCross={false}\n                    defaultValue={[this.props.people.filters[name][0], max]}\n                    onChange={r => this.zut(r, name)}\n                    min={peoplePreloaded.filters[name][0]}\n                    max={peoplePreloaded.filters[name][1]}\n                    step={step}\n                    style={{border: 'black'}}\n                    trackStyle={[{ backgroundColor: 'black'}, { backgroundColor: 'black'}]}\n                    handleStyle={[{ backgroundColor: 'white' , borderColor: 'red' }, { backgroundColor: 'white' , borderColor: 'red' }]}\n                    railStyle={{ backgroundColor: 'gray'}}\n                    handle={handle}\n                />\n            </Grid.Column>\n        )\n    }\n    handleTagsChange = (e, data) => {\n        let filters = this.props.people.filters;\n        filters[data.name] = data.value;\n        this.props.dispatch(updateFiltersAction(this.props.people, filters));\n    };\n    applyFilters (e) {\n        let filters = this.props.people.filters;\n        this.props.dispatch(getPeopleAction(filters, \"true\"));\n    }\n    handleChange = (e, data) => {\n        this.setState({[data.name]: data.value});\n    };\n    render () {\n        return (\n            <Segment>\n                <Grid>\n                    <Grid.Row columns={3}>\n                        {this.intervalCol(\"age\", 1, \"years\", this.props.people.filters[\"age\"][1])}\n                        {this.intervalCol(\"score\", 1, \"\", this.props.people.filters[\"score\"][1])}\n                        {this.intervalCol(\"location\", 50, \"km\", 50)}\n                    </Grid.Row>\n                    <Header as={'h4'}>Tags</Header>\n                    <Grid.Row columns={3}>\n                        <Grid.Column mobile={16} tablet={16} computer={12}>\n                            <Dropdown\n                                placeholder='Tags'\n                                fluid\n                                search\n                                multiple\n                                selection\n                                options={this.props.app.tagList}\n                                value={this.props.people.filters.tags}\n                                name={\"tags\"}\n                                onChange={this.handleTagsChange}\n                            />\n                        </Grid.Column>\n                        <Grid.Column mobile={16} tablet={16} computer={4}>\n                            <Button fluid color={\"green\"} onClick={e => this.applyFilters(e)}>Apply Filters</Button>\n                        </Grid.Column>\n                    </Grid.Row>\n                </Grid>\n            </Segment>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        people: state.people,\n        app: state.app,\n    };\n};\n\nexport default withRouter(connect(mapStateToProps)(GallerySettings))\n","import React from \"react\";\nimport {withRouter} from \"react-router-dom\"\nimport {connect} from \"react-redux\";\nimport { Container} from \"semantic-ui-react\";\nimport Gallery from \"./gallery\";\nimport GallerySettings from \"./gallery-settings\";\n\nclass Home extends React.Component {\n    constructor (props) {\n        super(props);\n        this.state = {};\n    }\n    render () {\n        return (\n            <Container>\n            <GallerySettings/>\n            <Gallery/>\n            </Container>\n        )\n    }\n}\n\nexport default withRouter(connect()(Home))\n","export const days = [\n    { key: '01', text: '01', value: 1 },\n    { key: '02', text: '02', value: 2 },\n    { key: '03', text: '03', value: 3 },\n    { key: '04', text: '04', value: 4 },\n    { key: '05', text: '05', value: 5 },\n    { key: '06', text: '06', value: 6 },\n    { key: '07', text: '07', value: 7 },\n    { key: '08', text: '08', value: 8 },\n    { key: '09', text: '09', value: 9 },\n    { key: '10', text: '10', value: 10 },\n    { key: '11', text: '11', value: 11 },\n    { key: '12', text: '12', value: 12 },\n    { key: '13', text: '13', value: 13 },\n    { key: '14', text: '14', value: 14 },\n    { key: '15', text: '15', value: 15 },\n    { key: '16', text: '16', value: 16 },\n    { key: '17', text: '17', value: 17 },\n    { key: '18', text: '18', value: 18 },\n    { key: '19', text: '19', value: 19 },\n    { key: '20', text: '20', value: 20 },\n    { key: '21', text: '21', value: 21 },\n    { key: '22', text: '22', value: 22 },\n    { key: '23', text: '23', value: 23 },\n    { key: '24', text: '24', value: 24 },\n    { key: '25', text: '25', value: 25 },\n    { key: '26', text: '26', value: 26 },\n    { key: '27', text: '27', value: 27 },\n    { key: '28', text: '28', value: 28 },\n    { key: '29', text: '29', value: 29 },\n    { key: '30', text: '30', value: 30 },\n    { key: '31', text: '31', value: 31 },\n];\nexport const months = [\n    { key: '01', text: '01', value: 1 },\n    { key: '02', text: '02', value: 2 },\n    { key: '03', text: '03', value: 3 },\n    { key: '04', text: '04', value: 4 },\n    { key: '05', text: '05', value: 5 },\n    { key: '06', text: '06', value: 6 },\n    { key: '07', text: '07', value: 7 },\n    { key: '08', text: '08', value: 8 },\n    { key: '09', text: '09', value: 9 },\n    { key: '10', text: '10', value: 10 },\n    { key: '11', text: '11', value: 11 },\n    { key: '12', text: '12', value: 12 },\n];\n\nconst y = () => {\n    let arr = [];\n    for (let i = 1900; i < 2005; i++) {\n        arr.push({key: i.toString(), text: i.toString(), value: i})\n    }\n    return arr\n};\n\nexport const years = y();\n\nexport const genders = [\n    { key: 'm', text: 'Male', value: 'male' },\n    { key: 'f', text: 'Female', value: 'female' },\n];\n\nexport const interest = [\n    { key: 'b', text: 'Bi', value: 'bi' },\n    { key: 'he', text: 'Hetero', value: 'hetero' },\n    { key: 'ho', text: 'Homo', value: 'homo' },\n];\n","import React from 'react'\nimport {Map, TileLayer, Marker, Popup } from 'react-leaflet'\n\nexport default class Mapp extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            lat: props.lat,\n            lng: props.lng,\n            zoom: 13\n        }\n    }\n\n    render() {\n        const position = [this.props.lat, this.props.lng];\n        return (\n            <Map center={position} zoom={this.state.zoom}>\n                <TileLayer\n                    attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n                    url='http://{s}.tile.osm.org/{z}/{x}/{y}.png'\n                />\n                <Marker position={position}>\n                    <Popup>\n                        A pretty CSS3 popup. <br/> Easily customizable.\n                    </Popup>\n                </Marker>\n            </Map>\n        );\n    }\n}\n","import React, {Component} from 'react'\nimport {Button, Container, Divider, Grid, Input, Message} from \"semantic-ui-react\";\nimport Mapp from \"./map\";\nimport env from \"../../env\";\n\nconst joinPlus = (s1, s2) => {\n    if (s1 === '') {\n       return s2\n    } else if (s2 === '') {\n        return s1\n    } else {\n        return  s1 + \"+\" + s2\n    }\n};\n\nconst joinAll = (tab) => {\n    let s = \"\";\n    tab.map((str) => {\n        s = joinPlus(s, str);\n        return s\n    });\n    return s\n};\n\nexport default class AddressForm extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            street: \"\",\n            city: \"\",\n            state: \"\",\n            zip: \"\",\n            country: \"\",\n            show: false,\n            lat: 0,\n            lng: 0,\n            api_id: \"\",\n            api_code: \"\",\n            error: false,\n            errMessage: \"\",\n        };\n        this.handleChange = this.handleChange.bind(this);\n        this.geocoder = this.geocoder.bind(this);\n        this.returnError = this.returnError.bind(this);\n    }\n    componentDidMount() {\n        fetch(env.api + '/kwal').then(res => {\n            res.json().then(json => {\n                if (json) {\n                json.map(a => {\n                    this.setState({[a.name]: [a.value][0]});\n                    return a\n                });\n                }\n            });\n        });\n    }\n    handleChange = (e, data) => {\n        this.setState({[data.name]: data.value})\n    };\n    handleError (error) {\n        this.setState({error: true, errMessage: error});\n        setTimeout(() => {\n            this.setState({error: false, errMessage: \"\"})\n        }, 2000)\n    }\n    returnError () {\n       if (this.state.error) {\n          return (\n              <Message color={'yellow'}>{this.state.errMessage}</Message>\n          )\n       } else {return (null)}\n    }\n    geocoder() {\n        const api = 'https://geocoder.api.here.com/6.2/geocode.json' +\n            '?app_id=EezmdtOLkZ5krcljUzoQ' +\n            '&app_code=GC4SmycFgOh8QsjPO_ytYQ' +\n            '&searchtext=';\n        const arr = [\n            this.state.street.split(' ').join('+'),\n            this.state.city.split(' ').join('+'),\n            this.state.state.split(' ').join('+'),\n            this.state.zip.split(' ').join('+'),\n            this.state.country.split(' ').join('+')\n        ];\n        const data = joinAll(arr);\n        if (data.length === 0) {\n            this.handleError(\"Please fill the form\")\n        } else {\n            const url = api + data;\n            fetch(url).then(res => {\n                if (res.status === 200) {\n                    res.json().then(json => {\n                        if (json.Response.View.length > 0) {\n                            const pos = json.Response.View[0].Result[0].Location.DisplayPosition;\n                            this.setState({\n                                show: true,\n                                lat: pos.Latitude,\n                                lng: pos.Longitude\n                            });\n                            const ret = {name: \"position\", value: pos};\n                            this.props.hc(\"\", ret);\n                        } else {\n                            this.handleError(\"Sorry but we can't find your address\")\n                        }\n                    })\n                } else {\n                    this.handleError(\"Sorry but we can't find your address\")\n                }\n            })\n        }\n    }\n    render () {\n        return (\n            <Container>\n                <Grid key={\"form\"}>\n                    {this.state.show ?\n                        <Grid.Column mobile={16} tablet={5} computer={5}>\n                            <Mapp lng={this.state.lng} lat={this.state.lat}/>\n                        </Grid.Column>\n                        : <></> }\n                    <Grid.Column mobile={16} tablet={6} computer={6}>\n                        <Grid.Row><Input label={\"Street Address\"} fluid key={1} type={'text'} onChange={this.handleChange} name={\"street\"} value={this.state.street}/></Grid.Row>\n                        <Grid.Row><Input label={\"City\"} fluid key={1} type={'text'} onChange={this.handleChange} name={\"city\"} value={this.state.city}/></Grid.Row>\n                        <Grid.Row><Input label={\"State\"} fluid key={1} type={'text'} onChange={this.handleChange} name={\"state\"} value={this.state.state}/></Grid.Row>\n                        <Grid.Row><Input label={\"Zip\"} fluid key={1} type={'text'} onChange={this.handleChange} name={\"zip\"} value={this.state.zip}/></Grid.Row>\n                        <Grid.Row><Input label={\"Country\"} fluid key={1} type={'text'} onChange={this.handleChange} name={\"country\"} value={this.state.country}/></Grid.Row>\n                        <Divider/>\n                        <Grid.Row><Button fluid onClick={this.geocoder}>Fetch</Button></Grid.Row>\n                        <Divider/>\n                        <>\n                        {this.returnError()}\n                        </>\n                    </Grid.Column>\n                </Grid>\n\n            </Container>\n        )\n    }\n}\n\n","import React from \"react\";\nimport {withRouter} from \"react-router-dom\"\nimport {connect} from \"react-redux\";\nimport {\n    Divider,\n    Segment,\n    Container,\n    Header,\n    Input,\n    Button,\n    Dropdown,\n    TextArea,\n    Form,\n    Grid,\n    Image,\n    Label, Message,\n} from 'semantic-ui-react';\nimport {\n    disableFieldAction,\n    enableFieldAction,\n    userAction,\n    userModifyAction\n} from \"../redux/action/app-action\";\nimport {days, genders, interest, months, years} from \"./modules/options-dates\";\nimport AddressForm from './components/address-form';\n\nconst Tags = (props) => {\n    if (props.app.user.userTags) {\n        return (\n            props.app.user.userTags.map(tag => (\n                <div key={tag.key}>\n                    <p>{tag.text}</p>\n                </div>\n            ))\n        )\n    } else {\n        return (null)\n    }\n};\n\nconst formatDate = (dateStr) => {\n    let date = new Date(dateStr);\n    let monthNames = [\n        \"January\", \"February\", \"March\",\n        \"April\", \"May\", \"June\", \"July\",\n        \"August\", \"September\", \"October\",\n        \"November\", \"December\"\n    ];\n\n    let day = date.getDate();\n    let monthIndex = date.getMonth();\n    let year = date.getFullYear();\n\n    return day + ' ' + monthNames[monthIndex] + ' ' + year;\n};\nconst fields = [\n    {\n        name: \"username\",\n        title: \"Username\",\n        view: (props) => (<p>{props.app.user[props.field.name]}</p>),\n        entries: [\n            {type: (hc, s) => (\n                    <Grid key={\"grid_username\"}>\n                        <Grid.Column mobile={16} tablet={6} computer={6}>\n                            <Grid.Row>\n                                <Header as={'h4'}>Password</Header>\n                            </Grid.Row>\n                            <Grid.Row>\n                                <Input fluid type={'password'} key={1} onChange={hc} name={\"old_password\"} value={s}/>\n                            </Grid.Row>\n                        </Grid.Column>\n                        <Grid.Column mobile={16} tablet={5} computer={5}>\n                            <Grid.Row>\n                                <Header as={'h4'}>New username</Header>\n                            </Grid.Row>\n                            <Grid.Row>\n                                <Input fluid type={'text'} key={1} onChange={hc} name={\"new_username\"} value={s}/>\n                            </Grid.Row>\n                        </Grid.Column>\n                    </Grid>\n                )}\n        ],\n        mobile : 16,\n        tablet : 16,\n        computer: 16,\n    },\n    {\n        name: \"firstname\",\n        title: \"Firstname\",\n        view: (props) => (<p>{props.app.user[props.field.name]}</p>),\n        entries: [\n            {type: (hc, s) => (<Input fluid key={1} onChange={hc} name={\"firstname\"} value={s}/>)}\n        ],\n        mobile : 16,\n        tablet : 16,\n        computer: 8,\n    },\n    {\n        name: \"lastname\",\n        title: \"Lastname\",\n        view: (props) => (<p>{props.app.user[props.field.name]}</p>),\n        entries: [\n            {type: (hc, s) => (<Input fluid key={1} onChange={hc} name={\"lastname\"} value={s}/>)}\n        ],\n        mobile : 16,\n        tablet : 16,\n        computer: 8,\n    },\n    {\n        name: \"biography\",\n        title: \"Biography\",\n        view: (props) => (<p>{props.app.user[props.field.name]}</p>),\n        entries: [\n            {type: (hc, s) => (\n                    <Form key={\"form\"}>\n                        <TextArea key={1} onChange={hc} name={\"biography\"} value={s} placeholder='Tell us who you are'  style={{ minHeight: 100 }} />\n                    </Form>\n                )}\n        ],\n        mobile : 16,\n        tablet : 16,\n        computer: 16,\n    },\n    {\n        name: \"email\",\n        title: \"Email\",\n        view: (props) => (<p>{props.app.user[props.field.name]}</p>),\n        entries: [\n            {type: (hc, s) => (\n                    <Grid key={\"grid_email\"}>\n                        <Grid.Column mobile={16} tablet={6} computer={6}>\n                            <Grid.Row>\n                                <Header as={'h4'}>Password</Header>\n                            </Grid.Row>\n                            <Grid.Row>\n                                <Input fluid key={1} type={'password'} onChange={hc} name={\"old_password\"} value={s}/>\n                            </Grid.Row>\n                        </Grid.Column>\n                        <Grid.Column mobile={16} tablet={5} computer={5}>\n                            <Grid.Row>\n                                <Header as={'h4'}>New Email</Header>\n                            </Grid.Row>\n                            <Grid.Row>\n                                <Input fluid key={2} type={'email'} onChange={hc} name={\"new_email\"} value={s}/>\n                            </Grid.Row>\n                        </Grid.Column>\n                    </Grid>\n                )}\n        ],\n        mobile : 16,\n        tablet : 16,\n        computer: 16,\n    },\n    {\n        name: \"password\",\n        title: \"Password\",\n        view: (props) => null,\n        entries: [\n            {type: (hc, s) => (\n                    <Grid key={\"grid_password\"}>\n                        <Grid.Column mobile={16} tablet={6} computer={6}>\n                            <Grid.Row>\n                                <Header as={'h4'}>Old Password</Header>\n                            </Grid.Row>\n                            <Grid.Row>\n                                <Input fluid key={1} type={'password'}  onChange={hc} name={\"old_password\"} value={s}/>\n                            </Grid.Row>\n                        </Grid.Column>\n                        <Grid.Column mobile={16} tablet={5} computer={5}>\n                            <Grid.Row>\n                                <Header as={'h4'}>New Password</Header>\n                            </Grid.Row>\n                            <Grid.Row>\n                                <Input fluid key={2} type={'password'} onChange={hc} name={\"new_password\"} value={s}/>\n                            </Grid.Row>\n                        </Grid.Column>\n                        <Grid.Column mobile={16} tablet={5} computer={5}>\n                            <Grid.Row>\n                                <Header as={'h4'}>Confirm Password</Header>\n                            </Grid.Row>\n                            <Grid.Row>\n                                <Input fluid key={3} type={'password'} onChange={hc} name={\"confirm\"} value={s}/>\n                            </Grid.Row>\n                        </Grid.Column>\n                    </Grid>\n                )}\n        ],\n        mobile : 16,\n        tablet : 16,\n        computer: 16,\n    },\n    {\n        name: \"location\",\n        title: \"Location\",\n        view: (props) => (null),\n        entries: [\n            {type: (hc, s, props) => (<AddressForm hc={hc} {...props} key={\"address-form\"}/>)},\n        ],\n        mobile : 16,\n        tablet : 16,\n        computer: 16,\n    },\n    {\n        name: \"genre\",\n        title: \"Gender\",\n        view: (props) => (<p>{props.app.user[props.field.name]}</p>),\n        entries: [\n            {type: (hc, s, props) => (\n                    <Grid.Column key={\"gender\"} mobile={16} tablet={16} computer={8}>\n                        <Form.Select\n                            fluid\n                            label={props.field.title}\n                            options={genders}\n                            placeholder='-'\n                            name={props.field.name}\n                            onChange={hc}\n                        />\n                    </Grid.Column>\n                )},\n        ],\n        mobile : 16,\n        tablet : 16,\n        computer: 8,\n    },\n    {\n        name: \"interest\",\n        title: \"Interest\",\n        view: (props) => (<p>{props.app.user[props.field.name]}</p>),\n        entries: [\n            {type: (hc, s, props) => (\n                    <Grid.Column key={\"interest\"} mobile={16} tablet={16} computer={8}>\n                        <Form.Select\n                            fluid\n                            label={props.field.title}\n                            options={interest}\n                            placeholder='-'\n                            name={props.field.name}\n                            onChange={hc}\n                        />\n                    </Grid.Column>\n                )},\n        ],\n        mobile : 16,\n        tablet : 16,\n        computer: 8,\n    },\n    {\n        name: \"birthday\",\n        title: \"Birthday\",\n        view: (props) => (<p>{formatDate(props.app.user.birthday)}</p>),\n        entries: [\n            {type: (hc, s) => (\n                    <Form.Group label={\"Birthday\"} key={\"birthday\"}>\n                        <Form.Select\n                            fluid label='Day'\n                            options={days}\n                            placeholder='01'\n                            name=\"day\"\n                            onChange={hc}\n                        />\n                        <Form.Select\n                            width={16}\n                            fluid label='Month'\n                            options={months}\n                            placeholder='01'\n                            name=\"month\"\n                            onChange={hc}\n                        />\n                        <Form.Select\n                            fluid label='Year'\n                            options={years}\n                            placeholder='1900'\n                            name=\"year\"\n                            onChange={hc}\n                        />\n                    </Form.Group>\n                )}\n        ],\n        mobile : 16,\n        tablet : 16,\n        computer: 16,\n    },\n    {\n        name: \"tag\",\n        title: \"Add a new tag\",\n        view: (props) => (null),\n        entries: [\n            {type: (hc, s) => (<Input fluid key={1} onChange={hc} name={\"tag\"} value={s}/>)}\n        ],\n        mobile : 16,\n        tablet : 16,\n        computer: 16,\n    },\n    {\n        name: \"usertags\",\n        title: \"Tags\",\n        view: (props) => (<Tags {...props}/>),\n        entries: [\n            {type: (hc, s, props, htc) => (\n                    <Grid.Column key={\"tags\"} mobile={16} tablet={16} computer={8}>\n                        <Dropdown\n                            placeholder='Tags'\n                            fluid\n                            search\n                            multiple\n                            selection\n                            options={props.app.tagList}\n                            value={props.state.body.tags}\n                            name={props.field.name}\n                            onChange={htc}\n                        />\n                    </Grid.Column>\n                )},\n        ],\n        mobile : 16,\n        tablet : 16,\n        computer: 16,\n    },\n    {\n        name: \"img1\",\n        title: \"Profile Image\",\n        view: (props) => (<View {...props}/>),\n        entries: [\n            {type: (hc, s, props) => (\n                    <Grid.Column key={\"add_tag\"} mobile={16} tablet={16} computer={8}>\n                        <UploadImage hfc={props.hfc}/>\n                    </Grid.Column>\n                )},\n        ],\n        mobile : 16,\n        tablet : 16,\n        computer: 4,\n    },\n    {\n        name: \"img2\",\n        title: \"Image 2\",\n        view: (props) => (<View {...props}/>),\n        entries: [\n            {type: (hc, s, props) => (\n                    <Grid.Column key={\"add_tag\"} mobile={16} tablet={16} computer={8}>\n                        <UploadImage hfc={props.hfc}/>\n                    </Grid.Column>\n                )},\n        ],\n        mobile : 16,\n        tablet : 16,\n        computer: 4,\n    },\n    {\n        name: \"img3\",\n        title: \"Image 3\",\n        view: (props) => (<View {...props}/>),\n        entries: [\n            {type: (hc, s, props) => (\n                    <Grid.Column key={\"add_tag\"} mobile={16} tablet={16} computer={8}>\n                        <UploadImage hfc={props.hfc}/>\n                    </Grid.Column>\n                )},\n        ],\n        mobile : 16,\n        tablet : 16,\n        computer: 4,\n    },\n    {\n        name: \"img4\",\n        title: \"Image 4\",\n        view: (props) => (<View {...props}/>),\n        entries: [\n            {type: (hc, s, props) => (\n                    <Grid.Column key={\"add_tag\"} mobile={16} tablet={16} computer={8}>\n                        <UploadImage hfc={props.hfc}/>\n                    </Grid.Column>\n                )},\n        ],\n        mobile : 16,\n        tablet : 16,\n        computer: 4,\n    },\n    {\n        name: \"img5\",\n        title: \"Image 5\",\n        view: (props) => (<View {...props}/>),\n        entries: [\n            {type: (hc, s, props) => (\n                    <Grid.Column key={\"add_tag\"} mobile={16} tablet={16} computer={8}>\n                        <UploadImage hfc={props.hfc}/>\n                    </Grid.Column>\n                )},\n        ],\n        mobile : 16,\n        tablet : 16,\n        computer: 4,\n    },\n];\n\nconst View = (props) => (<Image src={props.app.user[props.field.name]} size={\"medium\"}/>);\n\nconst UploadImage = (props) => (\n    <>\n        <Label\n            as=\"label\"\n            basic\n            htmlFor=\"upload\"\n        >\n            <Button\n                icon=\"upload\"\n                label={{\n                    basic: true,\n                    content: 'Select file(s)'\n                }}\n                labelPosition=\"right\"\n            />\n            <input\n                accept=\"image/x-png,image/gif,image/jpeg\"\n                hidden\n                id=\"upload\"\n                multiple\n                type=\"file\"\n                onChange={props.hfc}\n            />\n        </Label>\n    </>\n);\nconst Field = (props) => (\n    <>\n        <Segment>\n            <Grid>\n                <Grid.Column mobile={8} tablet={10} computer={9}>\n                    <Header as={'h3'}>{props.field.title}</Header>\n                </Grid.Column>\n                <Grid.Column mobile={8} tablet={6} computer={7}>\n                    <Button fluid onClick={e => props.modify(e, props.field.name)}>Modify</Button>\n                </Grid.Column>\n            </Grid>\n            <Divider/>\n            {props.app.field === props.field.name ?\n                <>\n                    {props.field.entries.map((entry) => (\n                        entry.type(props.handleChange, props.field.state, props, props.htc)\n                    ))}\n                    <Divider/>\n                    <Button fluid basic color={\"green\"} onClick={e => props.save(e, props.field.name)}>Save</Button>\n                </>\n                :\n                <>\n                    {props.field.view(props)}\n                </>\n            }\n        </Segment>\n    </>\n);\nconst Mess = (props) => (\n    <>\n        <Message color={props.color}>\n            <p>\n                {props.text}\n            </p>\n        </Message>\n    </>\n);\n\nclass User extends React.Component {\n    constructor (props) {\n        super(props);\n        this.state = {\n            name: null,\n            body: {\n                tags: props.app.user.userTags,\n            },\n            done: false,\n            error: false,\n        };\n        this.handleChange = this.handleChange.bind(this);\n        this.save = this.save.bind(this);\n        this.modify = this.modify.bind(this);\n        props.dispatch(userAction(props.app));\n    }\n    save = (e) => {\n        this.props.dispatch(userModifyAction(this.props.app, this.state.body, this.state.name, this.handleChange));\n    };\n    modify = (e, field) => {\n        this.setState({body:{tags: this.state.tags}, name: field});\n        if (this.props.app.field === field) {\n            this.props.dispatch(disableFieldAction(this.props.app));\n        } else {\n            this.props.dispatch(enableFieldAction(this.props.app, field));\n        }\n    };\n    componentWillReceiveProps() {\n        const tags = [];\n        if (this.props.user) {\n            this.props.app.user.userTags.map(tag => {\n                tags.push(tag.key);\n                return tag\n            });\n            this.setState({body: {tags: tags}});\n        }\n    }\n    handleChange = (e, data) => {\n        this.setState({body: {...this.state.body, [data.name]: data.value}});\n    };\n    handleFileChange = (e) => {\n        this.setState({body: {file: e.target.files[0]}});\n    };\n    handleTagChange = (e, data) => {\n        this.setState({body: {tags: data.value}});\n    };\n    error () {\n        if (this.state.error) {\n            return (\n                <>\n                    <Mess color={\"red\"} text={this.state.msg}/>\n                </>\n            )\n        }\n    }\n    done() {\n        if (this.state.done) {\n            return (\n                <>\n                    <Mess color={\"green\"} text={this.state.msg}/>\n                </>\n            )\n        }\n    }\n    render () {\n        return (\n            <>\n                <Container className={\"user\"}>\n                    {this.error()}\n                    {this.done()}\n                    <Grid>\n                        {fields.map((field) => (\n                            <Grid.Column\n                                key={field.name}\n                                mobile={field.mobile}\n                                tablet={field.tablet}\n                                computer={field.computer}\n                            >\n                                <Field\n                                    {...this.props}\n                                    handleChange={this.handleChange}\n                                    hfc={this.handleFileChange}\n                                    htc={this.handleTagChange}\n                                    save={this.save}\n                                    modify={this.modify}\n                                    state={this.state}\n                                    field={field}\n                                />\n                            </Grid.Column>\n                        ))}\n                    </Grid>\n                </Container>\n            </>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        login: state.login,\n        people: state.people,\n        app: state.app,\n    };\n};\n\nexport default withRouter(connect(mapStateToProps)(User))\n","import React from \"react\";\nimport {withRouter} from \"react-router-dom\"\nimport {connect} from \"react-redux\";\nimport {\n    Divider,\n    Segment,\n    Container,\n    Header,\n    Button,\n    Grid,\n    Icon,\n    Image,\n} from 'semantic-ui-react';\nimport {getAge, timeSince} from \"./modules/utils\";\nimport {peopleAction} from \"../redux/action/people-action\";\nimport {block, dislike, like} from \"../redux/action/types-action\";\nimport env from \"../env\";\n\nconst Online = (props) => (\n    <>\n        {props.online ? (\n            <div style={{display: \"inline\"}}>\n                <p><Icon name={\"circle\"} color={'teal'}/> Online</p>\n            </div>\n        ) : (\n            <>\n                <p>Last seen: {timeSince(props.lastConn)} ago</p>\n            </>\n        )}\n    </>\n);\n\nclass Profile extends React.Component {\n    constructor (props) {\n        super(props);\n        if (props.app.profileId === -1) {\n            props.history.push('/home');\n            this.state = {\n                loaded: false,\n            };\n        } else {\n            this.state = {\n                loaded: true,\n                profile : props.people.data[props.app.i].Properties\n            };\n            fetch(env.api + '/visit/' + props.app.profileId, {\n                method: 'PUT',\n                headers: {'Authorization': localStorage.getItem('jwt')}\n            })\n        }\n        this.dislike = this.dislike.bind(this);\n        this.like = this.like.bind(this);\n        this.block= this.block.bind(this);\n    }\n    componentDidMount() {\n        const url = \"ws://localhost:8181/api/online/websocket/\" + this.props.app.profileId;\n        const socket = new WebSocket(url);\n        const self = this;\n        socket.onopen = (event) => {\n            socket.onmessage = ({data}) => {\n                data = JSON.parse(data);\n                self.setState({\n                    profile: {...self.state.profile, online: data}\n                });\n            };\n        };\n        this.setState({socket: socket})\n    }\n    componentWillUnmount() {\n        if(this.state.socket) {\n            this.state.socket.close()\n        }\n    }\n    dislike = () => {\n        this.props.dispatch(peopleAction(this.props.people, this.props.people.data[this.props.app.i].NodeIdentity, dislike))\n        this.setState({profile: {...this.state.profile, relation: \"DISLIKE\"}})\n    };\n    like = () => {\n        this.props.dispatch(peopleAction(this.props.people, this.props.people.data[this.props.app.i].NodeIdentity, like))\n        this.setState({profile: {...this.state.profile, relation: \"LIKE\"}})\n    };\n    block = () => {\n        this.props.dispatch(peopleAction(this.props.people, this.props.people.data[this.props.app.i].NodeIdentity, block))\n        this.setState({profile: {...this.state.profile, relation: \"BLOCK\"}});\n    };\n    render () {\n        const {profile} = this.state;\n        return (\n            this.state.loaded ? (\n                <Container className={\"profile\"}>\n                    <Grid>\n                        <Grid.Column mobile={16} tablet={16} computer={16}>\n                            <Segment>\n                                <Grid>\n                                    <Grid.Column style={{padding: \"3px\"}} mobile={16} tablet={6} computer={6}>\n                                        <p>{profile.ilike ? \"Vous a déjà liké\" : \"\"}</p>\n                                    </Grid.Column>\n                                    <Grid.Column  style={{padding: \"3px\"}} mobile={16} tablet={6} computer={6}>\n                                        <Header as={\"h3\"}>Score {profile.rating}/100</Header>\n                                    </Grid.Column>\n                                    <Grid.Column  style={{padding: \"3px\"}} mobile={16} tablet={4} computer={4}>\n                                        <Online online={profile.online} lastConn={profile.last_conn}/>\n                                    </Grid.Column>\n                                </Grid>\n                            </Segment>\n                        </Grid.Column>\n                        <Divider vertical/>\n                        <Grid.Column mobile={16} tablet={8} computer={4}>\n                            <Image circular size={\"medium\"} src={profile.img1} />\n                        </Grid.Column>\n                        <Grid.Column mobile={16} tablet={8} computer={8}>\n                            <Segment>\n                                <Grid>\n                                    <Grid.Row mobile={16} tablet={16} computer={16}>\n                                        <Grid.Column mobile={16} tablet={8} computer={8}>\n                                            <Header as={\"h2\"}>{profile.name}</Header>\n                                        </Grid.Column>\n                                        <Grid.Column mobile={16} tablet={4} computer={5}>\n                                            <Header as={\"h3\"}>{profile.firstname} {profile.lastname}</Header>\n                                        </Grid.Column>\n                                        <Grid.Column mobile={16} tablet={4} computer={3}>\n                                            <Header as={\"h4\"}>{getAge(profile.birthday)} years</Header>\n                                        </Grid.Column>\n                                    </Grid.Row>\n                                    <Grid.Row mobile={16} tablet={16} computer={16}>\n                                        <Button.Group fluid>\n                                            <Button\n                                                disabled={profile.relation === \"BLOCK\"}\n                                                color={\"red\"}\n                                                onClick={this.block}\n                                            ><Icon name={\"ban\"}/></Button>\n                                            <Button.Or />\n                                            <Button\n                                                disabled={profile.relation === \"DISLIKE\"}\n                                                color={\"yellow\"}\n                                                onClick={this.dislike}\n                                            ><Icon name={\"thumbs down\"}/></Button>\n                                            <Button.Or />\n                                            <Button\n                                                disabled={profile.relation === \"LIKE\"}\n                                                color={\"green\"}\n                                                onClick={this.like}\n                                            ><Icon name={\"heart\"}/></Button>\n                                        </Button.Group>\n                                    </Grid.Row>\n                                    <Grid.Row mobile={16} tablet={16} computer={16}>\n                                        <Grid.Column mobile={16} tablet={8} computer={8}>\n                                            <Header as={\"h3\"}>{profile.genre}</Header>\n                                        </Grid.Column>\n                                        <Grid.Column mobile={16} tablet={4} computer={5}>\n                                            <Header as={\"h3\"}>{profile.interest} </Header>\n                                        </Grid.Column>\n                                    </Grid.Row>\n                                </Grid>\n                            </Segment>\n                        </Grid.Column>\n                        <Grid.Column mobile={16} tablet={8} computer={4}>\n                            <p>{profile.biography}</p>\n                        </Grid.Column>\n                        <Grid.Column mobile={16} tablet={16} computer={16}>\n                            <Segment>\n                                <Grid>\n                                    <Grid.Column mobile={16} tablet={8} computer={4}>\n                                        <Image size={\"big\"} src={profile.img2} />\n                                    </Grid.Column>\n                                    <Grid.Column mobile={16} tablet={8} computer={4}>\n                                        <Image size={\"big\"} src={profile.img3} />\n                                    </Grid.Column>\n                                    <Grid.Column mobile={16} tablet={8} computer={4}>\n                                        <Image size={\"big\"} src={profile.img4} />\n                                    </Grid.Column>\n                                    <Grid.Column mobile={16} tablet={8} computer={4}>\n                                        <Image size={\"big\"} src={profile.img5} />\n                                    </Grid.Column>\n                                </Grid>\n                            </Segment>\n                        </Grid.Column>\n                    </Grid>\n                    <Segment>\n                        <Button fluid color={\"red\"} >Signaler le profil</Button>\n                    </Segment>\n                </Container>\n            ):(null)\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        login: state.login,\n        app: state.app,\n        people: state.people,\n    };\n};\n\nexport default withRouter(connect(mapStateToProps)(Profile))\n","import React, {Component} from 'react';\nimport {connect} from \"react-redux\";\nimport {withRouter} from 'react-router-dom';\nimport store from '../redux/store/matcha-store';\nimport {loginAction} from '../redux/action/login-action';\nimport { Button, Form, Grid, Header, Image, Message, Segment } from 'semantic-ui-react'\n\nclass Login extends Component {\n    constructor (props) {\n        super(props);\n        this.state = {\n            username: \"\",\n            email: \"\",\n            password: \"\",\n            confirm: \"\",\n            firstname: \"\",\n            lastname: \"\",\n            gender: \"\",\n            interest: \"\",\n            geo: false,\n            day: 1,\n            month: 1,\n            year: 1900,\n        };\n        this.handleChange = this.handleChange.bind(this);\n        this.submit = this.submit.bind(this);\n    }\n    handleChange = (e, data) => {\n        this.setState({[data.name]: data.value});\n    };\n    handleToggle = (e, data) => {\n        this.setState({[data.name]: data.checked});\n    };\n    submit (e) {\n        e.preventDefault();\n        const formData = new FormData();\n        formData.append(\"username\", this.state.username);\n        formData.append(\"password\", this.state.password);\n\n        store.dispatch(loginAction(formData, this.props.history));\n    };\n    alertMessage(status, message) {\n        if (status) {\n            return (\n                <Message negative attached={\"bottom\"}>\n                    {message}\n                </Message>\n            )\n        } else {\n            return null;\n        }\n    }\n    render () {\n        const lgn = this.props.login;\n        return (\n            <React.Fragment>\n                <style>{`\n      body > div,\n      body > div > div,\n      body > div > div > div.login-form {\n        height: 80%;\n      margin-top: 20px;\n      }\n    `}\n                </style>\n                <div className='login-form'>\n                    <Grid textAlign='center' style={{ height: '100%' }} verticalAlign='middle'>\n                        <Grid.Column style={{ maxWidth: 450 }}>\n                            <Header as='h2' color='pink' textAlign='center'>\n                                <Image src={process.env.PUBLIC_URL + '/logo.png'} /> Login\n                            </Header>\n                            <Form size='large'>\n                                <Segment stacked>\n                                    <Form.Input\n                                        fluid\n                                        label={\"Username\"}\n                                        icon='user'\n                                        type={\"text\"}\n                                        iconPosition='left'\n                                        placeholder='Username'\n                                        name={\"username\"}\n                                        value={this.state.username}\n                                        error={lgn.err.status}\n                                        onChange={this.handleChange}\n                                    />\n                                    <Form.Input\n                                        fluid\n                                        label={\"Password\"}\n                                        icon='lock'\n                                        iconPosition='left'\n                                        placeholder='********'\n                                        type={\"password\"}\n                                        name={\"password\"}\n                                        value={this.state.password}\n                                        error={lgn.err.status}\n                                        onChange={this.handleChange}\n                                    />\n                                    <Button\n                                        color='pink'\n                                        fluid\n                                        size='large'\n                                        onClick={this.submit}\n                                    >Login</Button>\n                                </Segment>\n                            </Form>\n                            {this.alertMessage(lgn.err.status, lgn.err.message)}\n                            <Message>\n                                Not registered? <a href='/register'>Sign Up</a>\n                            </Message>\n                            <Message>\n                                Forgot Password? <a href='/forgot'>Click Here</a>\n                            </Message>\n                        </Grid.Column>\n                    </Grid>\n                </div>\n            </React.Fragment>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        login: state.login\n    };\n};\n\nexport default withRouter(connect(mapStateToProps)(Login))\n","import {LOGIN, LOGIN_FAIL, LOGOUT} from './types-action';\nimport jwtDecode from 'jwt-decode';\nimport env from \"../../env\";\n\nexport const loginAction = (formData, history) => dispatch => {\n    fetch(env.auth + '/login', {\n        method: 'POST',\n        body: formData,\n        credentials: 'same-origin'\n    })\n        .then(res => {\n                switch (res.status) {\n                    case 201:\n                        res.json().then(json =>{\n                            dispatch({\n                                type: LOGIN_FAIL,\n                                err: {status: true, message: json.err}\n                            });\n                        });\n                        break;\n                    case 200:\n                        res.json().then(json =>{\n                            localStorage.setItem(\"jwt\", json);\n                            const data = jwtDecode(json);\n                            dispatch({\n                                ...data,\n                                type: LOGIN,\n                            });\n                            history.push('/');\n                        });\n                        break;\n                    default:\n                        break;\n                }\n            }\n        )\n};\n\nexport const logoutAction = (history) => dispatch => {\n    localStorage.removeItem('jwt');\n    dispatch({\n        type: LOGOUT,\n    });\n    history.push('/')\n};\n","import React, {Component} from 'react';\nimport store from '../redux/store/matcha-store';\nimport {registerAction} from '../redux/action/register-action';\nimport {Message, Button, Form, Grid, Header, Image, Segment } from 'semantic-ui-react'\nimport {connect} from \"react-redux\";\nimport {withRouter} from 'react-router-dom';\n\nclass Register extends Component {\n    constructor (props) {\n        super(props);\n        this.state = {\n            username: \"\",\n            email: \"\",\n            password: \"\",\n            confirm: \"\",\n            firstname: \"\",\n            lastname: \"\",\n            geo: false,\n        };\n        this.handleChange = this.handleChange.bind(this);\n        this.submit = this.submit.bind(this);\n    }\n    handleChange = (e, data) => {\n        this.setState({[data.name]: data.value});\n    };\n    handleToggle = (e, data) => {\n        this.setState({[data.name]: data.checked});\n    };\n    submit (e) {\n        e.preventDefault();\n        const formData = new FormData(e.target);\n        formData.append(\"username\", this.state.username);\n        formData.append(\"email\", this.state.email);\n        formData.append(\"password\", this.state.password);\n        formData.append(\"confirm\", this.state.confirm);\n        formData.append(\"firstname\", this.state.firstname);\n        formData.append(\"lastname\", this.state.lastname);\n        store.dispatch(registerAction(formData, this.props.history));\n    };\n    alertMessage(status, message) {\n       if (status) {\n           return (\n               <Message negative size={\"mini\"}>\n                       {message}\n               </Message>\n           )\n       } else {\n           return null;\n       }\n    }\n    render () {\n        const reg = this.props.register;\n        return (\n            <React.Fragment>\n                <style>{`\n      body > div,\n      body > div > div,\n      body > div > div > div.register-form {\n      margin-top: 20px;\n        height: 80%;\n      }\n    `}\n                </style>\n                <div className='register-form'>\n                    <Grid textAlign='center' style={{ height: '100%' }} verticalAlign='middle'>\n                        <Grid.Column style={{ maxWidth: 450 }}>\n                            <Header as='h2' color='pink' textAlign='center'>\n                                <Image src={process.env.PUBLIC_URL + '/logo.png'} /> Create your account\n                            </Header>\n                            <Form size='large'>\n                                <Segment stacked>\n                                    <Form.Input\n                                        fluid\n                                        label={\"Username\"}\n                                        icon='user'\n                                        iconPosition='left'\n                                        placeholder='Username'\n                                        type={\"text\"}\n                                        name={\"username\"}\n                                        value={this.state.username}\n                                        error={!reg.username.status}\n                                        onChange={this.handleChange}\n                                    />\n                                    {this.alertMessage(!reg.username.status, reg.username.message)}\n                                    <Form.Input\n                                        fluid\n                                        label={\"Email\"}\n                                        icon='mail'\n                                        iconPosition='left'\n                                        placeholder='Email'\n                                        name={\"email\"}\n                                        value={this.state.email}\n                                        type={\"email\"}\n                                        error={!reg.email.status}\n                                        onChange={this.handleChange}\n                                    />\n                                    {this.alertMessage(!reg.email.status, reg.email.message)}\n                                    <Form.Group>\n                                        <Form.Input\n                                            width={8}\n                                            fluid\n                                            label={\"Password\"}\n                                            icon='lock'\n                                            iconPosition='left'\n                                            placeholder='Password'\n                                            name={\"password\"}\n                                            value={this.state.password}\n                                            type='password'\n                                            error={!reg.password.status}\n                                            onChange={this.handleChange}\n                                        />\n                                        <Form.Input\n                                            width={8}\n                                            fluid\n                                            label={\"Confirm\"}\n                                            icon='lock'\n                                            iconPosition='left'\n                                            placeholder='Password'\n                                            name={\"confirm\"}\n                                            value={this.state.confirm}\n                                            type='password'\n                                            error={!reg.confirm.status}\n                                            onChange={this.handleChange}\n                                        />\n                                    </Form.Group>\n                                    {this.alertMessage(!reg.confirm.status || !reg.password.status,\n                                        reg.password.message + reg.confirm.message)}\n                                    <Form.Group>\n                                        <Form.Input\n                                            width={8}\n                                            fluid\n                                            label={\"Firstname\"}\n                                            icon='user'\n                                            iconPosition='left'\n                                            type={\"text\"}\n                                            placeholder='Firstname'\n                                            name={\"firstname\"}\n                                            value={this.state.firstname}\n                                            error={!reg.firstname.status}\n                                            onChange={this.handleChange}\n                                        />\n                                        <Form.Input\n                                            width={8}\n                                            fluid\n                                            label={\"Lastname\"}\n                                            icon='user'\n                                            iconPosition='left'\n                                            placeholder='Lastname'\n                                            name={\"lastname\"}\n                                            value={this.state.lastname}\n                                            type={\"text\"}\n                                            error={!reg.lastname.status}\n                                            onChange={this.handleChange}\n                                        />\n                                    </Form.Group>\n                                    {this.alertMessage(!reg.lastname.status || !reg.firstname.status,\n                                        reg.lastname.message + reg.firstname.message)}\n                                    <Button\n                                        color='pink'\n                                        fluid\n                                        size='large'\n                                        onClick={this.submit}\n                                    >Register</Button>\n                                </Segment>\n                            </Form>\n                            <Message>\n                                Already registered? <a href='/login'>Sign In</a>\n                            </Message>\n                        </Grid.Column>\n                    </Grid>\n                </div>\n            </React.Fragment>\n        )\n    }\n}\n\n\nconst mapStateToProps = (state) => {\n    return {\n        register: state.register,\n    };\n};\n\nexport default withRouter(connect(mapStateToProps)(Register))\n","import {REGISTER} from './types-action';\nimport env from \"../../env\";\n\nexport const registerAction = (formData, history) => dispatch => {\n    fetch(env.auth + '/register', {\n        method: 'POST',\n        body: formData,\n        credentials: 'same-origin',\n    })\n        .then(res => {\n                switch (res.status) {\n                    case 201:\n                        res.json().then(json =>{\n                            dispatch(json);\n                        });\n                        break;\n                    case 200:\n                        res.json().then(json =>{\n                            dispatch({\n                                type: REGISTER,\n                                data : json,\n                            });\n                            history.push('/');\n                        });\n                        break;\n                    default:\n                        break;\n                }\n            }\n        )\n};\n","import React, {Component} from \"react\";\nimport {withRouter} from \"react-router-dom\"\nimport {connect} from \"react-redux\";\n\nclass Error401 extends Component{\n    redirect (props) {\n        setTimeout(function () {\n            props.history.push('/');\n        }, 2000)\n    }\n    render() {\n        return (\n            <React.Fragment>\n                <h3>You are not authorized</h3>\n                <h4>...Redirecting</h4>\n                {this.redirect(this.props)}\n            </React.Fragment>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n    };\n};\n\nexport default withRouter(connect(mapStateToProps, null)(Error401))\n","import React from \"react\";\nimport {withRouter} from \"react-router-dom\"\nimport {connect} from \"react-redux\";\nimport {\n    Button,\n    Container,\n    Divider,\n    Grid,\n    Header,\n    Icon,\n    Menu,\n    Popup,\n} from 'semantic-ui-react'\nimport env from \"../../env\";\n\nconst Notification = (props) => (\n    <Grid.Row>\n        <Grid columns={2}>\n            <Grid.Column width={13}>\n                <Header as='h4'>\n                    {props.notif.message}\n                </Header>\n            </Grid.Column>\n            <Grid.Column width={3} textAlign='center'>\n                <Button\n                    circular\n                    icon\n                    negative\n                    onClick={e => props.deleteMe(props.notif.id, e)}\n                >\n                    <Icon name={\"delete\"}/>\n                </Button>\n            </Grid.Column>\n        </Grid>\n        <Divider/>\n    </Grid.Row>\n);\n\n\nclass Notifications extends React.Component {\n    constructor (props) {\n        const socket = new WebSocket(\"ws://localhost:8181/api/notifications/websocket/\" + props.login.id);\n        socket.onopen = (event) => {\n            socket.onmessage = ({data}) => {\n                data = JSON.parse(data);\n                this.setState({\n                    isOpen: false,\n                    tab: [\n                        {\n                            id: data.id,\n                            author: data.author_id,\n                            message: data.message,\n                            subject: data.subject_id,\n                        },\n                        ...this.state.tab,\n                    ]\n                });\n            };\n        };\n        let init = {\n            method: 'GET',\n            headers:{\n                'Authorization': localStorage.getItem('jwt'),\n            }\n        };\n        fetch(env.api + '/notifications/history/' + props.login.id, init)\n            .then(res => {\n                if (res.status === 201) {\n                } else if (res.status === 202) {\n                } else if (res.status === 203) {\n                } else if (res.status === 204) {\n                } else if (res.status === 200) {\n                    res.json().then(json => {\n                        let tab = [];\n                        json.map(notif => {\n                            tab.push(\n                                {\n                                    id: notif.id,\n                                    author: notif.author_id,\n                                    message: notif.message,\n                                    subject: notif.subject_id,\n                                },\n                            );\n                            this.setState({tab: tab});\n                            return notif;\n                        })\n                    })\n                }\n            });\n        super(props);\n        this.state = {\n            tab: [],\n            socket : socket,\n        };\n        this.deleteMe = this.deleteMe.bind(this);\n    }\n    componentWillUnmount() {\n        if(this.state.socket) {\n            this.state.socket.close()\n        }\n    }\n\n    deleteMe = (id, e) => {\n        e.preventDefault();\n        if (this.state.tab.length < 2 ) {\n            this.setState({isOpen: false})\n        }\n        this.setState({tab: this.state.tab.filter((obj) => {\n                return obj.id !== id\n            })});\n        fetch(env.api + '/notifications/' + id, {method:\"DELETE\"})\n    };\n    handleOpen = () => {\n        if (this.state.tab.length > 0 ) {\n            this.setState({ isOpen: true });\n        }\n    };\n    handleClose = () => {\n        this.setState({ isOpen: false })\n        clearTimeout(this.timeout)\n    };\n    render () {\n        return (\n            <Popup\n                on='click'\n                open={this.state.isOpen}\n                onClose={this.handleClose}\n                onOpen={this.handleOpen}\n                trigger={<Menu.Item header><Icon color={this.state.tab.length === 0 ? \"black\" : \"red\"} name='bell'/></Menu.Item>}\n                position='bottom right'\n                flowing\n            >\n                <Grid centered divided columns={1}>\n                    <Container>\n                        {this.state.tab.map((n, i) => (\n                            <Notification deleteMe={this.deleteMe} key={i} notif={n} {...this.props}/>\n                        ))}\n                    </Container>\n                </Grid>\n            </Popup>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        login: state.login,\n        people: state.people,\n    };\n};\n\nexport default withRouter(connect(mapStateToProps)(Notifications))\n","import React from \"react\";\nimport Notifications from './notifications'\nimport {connect} from \"react-redux\";\nimport {withRouter} from 'react-router-dom';\nimport {\n    Dropdown,\n    Icon,\n    Image,\n    Menu,\n} from 'semantic-ui-react'\nimport {logoutAction} from \"../../redux/action/login-action\";\n\n\nconst trigger = (img, name) => (\n    <span>\n    <Image size={\"mini\"} avatar src={img}/>\n  </span>\n);\n\nconst Nav = (props) => (\n    <Menu fluid widths={5} pointing secondary icon={props.icon} size={\"huge\"}>\n        <Menu.Item\n            header\n            active={props.location.pathname === '/home'}\n            onClick={() => props.history.push('/home')}\n        >\n            {props.buttons.home.name()}\n        </Menu.Item>\n\n        <Menu.Item\n            header\n            active={props.location.pathname === '/messenger'}\n            onClick={() => props.history.push('/messenger')}\n        >\n            <Icon\n                disabled={props.location.pathname === '/messenger'}\n                name='chat'\n            />\n            {props.buttons.messenger.name}\n        </Menu.Item>\n\n        <Dropdown trigger={trigger(props.app.user.img1, props.app.user.username)} item >\n            <Dropdown.Menu>\n                <Dropdown.Item\n                    active={props.location.pathname === '/user'}\n                    onClick={() => props.history.push('/user')}\n                >{props.app.user.username}</Dropdown.Item>\n                <Dropdown.Item\n                    active={props.location.pathname === '/matchs'}\n                    onClick={() => props.history.push('/matchs')}\n                >Matchs</Dropdown.Item>\n                <Dropdown.Item\n                    active={props.location.pathname === '/history'}\n                    onClick={() => props.history.push('/history')}\n                >History</Dropdown.Item>\n            </Dropdown.Menu>\n        </Dropdown>\n\n        <Notifications/>\n\n        <Menu.Item\n            header\n            onClick={() => props.dispatch(logoutAction(props.history))}\n        >\n            <Icon name='log out'/>\n            {props.buttons.logout.name}\n        </Menu.Item>\n    </Menu>\n);\n\nconst mapStateToProps = (state) => {\n    return {\n        login: state.login,\n        app: state.app\n    };\n};\n\nexport default withRouter(connect(mapStateToProps)(Nav))\n","import React from 'react'\nimport {Grid, Image} from \"semantic-ui-react\";\n\nexport const mobileButtons = {\n    home:{\n        name :() => (\n            <Grid textAlign='center' verticalAlign='middle'>\n                <Grid.Column>\n                    <Image style={{width: 17}} src={process.env.PUBLIC_URL + '/logo.png'}/>\n                </Grid.Column>\n            </Grid>\n        )\n    },\n    user: {\n        name: \"\",\n    },\n    messenger:{\n        name: \"\",\n    },\n    notifications :{\n        name: \"Messenger\",\n    },\n    logout: {\n        name: \"\",\n    },\n    size: \"small\",\n    sizeActive: \"big\",\n};\n\nexport const computerButtons = {\n    home:{\n        name :() => (\n            <Grid textAlign=\"center\" rows={2}>\n                <Grid.Row style={{padding:0}}  height={10}>\n                    <Image  style={{height: 34}}  src={process.env.PUBLIC_URL + '/logo.png'}/>\n                </Grid.Row>\n                <Grid.Row  style={{paddingTop:0}} height={10}>\n                    <Image  style={{height: 17}} src={process.env.PUBLIC_URL + '/title.png'}/>\n                </Grid.Row>\n            </Grid>\n        )\n    },\n    user: {\n        name: \"User\",\n    },\n    notifications:{\n        name: \"Notifications\",\n    },\n    messenger:{\n        name: \"Messenger\",\n    },\n    logout: {\n        name: \"Logout\",\n    },\n    size: \"small\",\n    sizeActive: \"big\",\n};\n","import React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport {withRouter} from 'react-router-dom';\nimport {\n    Responsive,\n} from 'semantic-ui-react'\nimport Nav from \"./components/navbar\";\nimport {computerButtons, mobileButtons} from \"./components/nav-buttons\";\nimport publicIp from 'public-ip';\nimport env from \"../env\";\nimport {userAction} from \"../redux/action/app-action\";\nconst sendPosition = (type, pos) => {\n    fetch(env.api + '/user/position', {\n        headers:{\n            'Authorization': localStorage.getItem('jwt'),\n        },\n        method: 'PUT',\n        body: JSON.stringify({type: type, position: pos}),\n        credentials: 'same-origin',\n    })\n};\n\nclass Navigation extends Component {\n    constructor(props) {\n        super(props);\n        if (props.login.loggedIn && (!props.app.user.name)) {\n            props.dispatch(userAction(props.app));\n        }\n    }\n    componentWillUpdate(nextProps, nextState, nextContext) {\n        if ((!this.props.login.loggedIn && nextProps.login.loggedIn) || !this.props.app.user.name) {\n            this.props.dispatch(userAction(this.props.app));\n        }\n    }\n\n    componentDidMount() {\n        if (navigator.geolocation) {\n            navigator.geolocation.getCurrentPosition(this.updatePosition, this.geoDeniedPosition);\n        }\n    }\n    updatePosition(position) {\n        sendPosition(\"gps\", {lat: position.coords.latitude, long: position.coords.longitude})\n    }\n    geoDeniedPosition(err) {\n        if (err.code === err.PERMISSION_DENIED) {\n            (async () => {\n                sendPosition(\"ip\", await publicIp.v4())\n            })();\n        }\n    }\n    render() {\n        if (this.props.login.loggedIn) {\n            return (\n                <div>\n                    <Responsive {...Responsive.onlyMobile}>\n                        <Nav buttons={mobileButtons} name={\"\"} mobile/>\n                    </Responsive>\n                    <Responsive {...Responsive.onlyTablet}>\n                        <Nav buttons={computerButtons} name={this.props.login.username} icon={\"labeled\"}/>\n                    </Responsive>\n                    <Responsive {...Responsive.onlyComputer}>\n                        <Nav buttons={computerButtons}  name={this.props.login.username} icon={\"labeled\"}/>\n                    </Responsive>\n                </div>\n            )\n        } else {\n            return null\n        }\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        login: state.login,\n        app: state.app,\n        people: state.people,\n        messenger: state.messenger,\n        matchs: state.matchs,\n    };\n};\n\nexport default withRouter(connect(mapStateToProps)(Navigation))\n","import React, {Component} from 'react';\nimport {connect} from \"react-redux\";\nimport {withRouter} from 'react-router-dom';\n\nexport function getJsonFromUrl(url) {\n    if(!url) url = window.location.search;\n    let query = url.substr(1);\n    let result = {};\n    query.split(\"&\").forEach(function(part) {\n        var item = part.split(\"=\");\n        result[item[0]] = decodeURIComponent(item[1]);\n    });\n    return result;\n}\n\nclass ValidEmail extends Component {\n    constructor (props) {\n        super(props);\n        this.state = {\n            message : \"\",\n            class : \"\",\n        };\n    }\n    componentWillMount() {\n        let url = getJsonFromUrl(this.props.location.search);\n        fetch('/auth/valid_email/' + url.token)\n            .then((res) => {\n                if (res.status === 200) {\n                    this.setState({message: \"Email successfully activated\", class: \" is-info\"})\n                } else if (res.status === 401) {\n                    res.json().then((json) => {\n                        this.setState({message: json.err, class: \" is-danger\"})\n                    })\n                }\n            });\n        setTimeout(() => {\n            this.props.history.push('/');\n        }, 2000)\n    }\n    snack () {\n        return (\n            <div id=\"snackbar\" className=\"snackbar valid-email\">\n                <article className={\"message  \" + this.state.class}>\n                    <div className=\"message-body\">\n                        <p>{this.state.message}</p>\n                    </div>\n                </article>\n            </div>\n        )\n    }\n    render () {\n        return (\n            <React.Fragment>\n                {this.snack()}\n            </React.Fragment>\n        )\n    }\n}\n\nexport default withRouter(connect()(ValidEmail))","import {ADD_MESSAGE, INCR_I, UPDATE_SUITOR} from \"./types-action\";\nimport {wsApi} from \"../store/preloaded-state-store\";\nimport env from \"../../env\";\n\nconst join = (a, b) => {\n    const ret =  (a <= b ? a + '/' + b : b + '/' + a);\n    return (ret)\n};\n\nexport const updateSuitorAction = (prevState, suitorId, userId) => dispatch => {\n    let init = {\n        method: 'GET',\n        headers:{\n            'Authorization': localStorage.getItem('jwt'),\n            'User-Id' : userId,\n            'Suitor-Id' : suitorId,\n        }\n    };\n    fetch(env.api + '/messages', init)\n        .then(res => {\n                switch (res.status) {\n                    case 202:\n                        localStorage.removeItem('jwt');\n                        res.json().then(json =>{\n                        });\n                        break;\n                    case 201:\n                        res.json().then(json =>{\n                        });\n                        break;\n                    case 200:\n                        res.json().then(data => {\n                            const newUrl = wsApi + join(userId, suitorId);\n                            prevState.ws.close();\n                            dispatch({\n                                ...prevState,\n                                ws: new WebSocket(newUrl),\n                                url: newUrl,\n                                type: UPDATE_SUITOR,\n                                suitorId: suitorId,\n                                messages: data,\n                                i: data.length,\n                            });\n                        });\n                        break;\n                    default:\n                        break;\n                }\n            }\n        )\n};\n\nexport const incrementMessageAction = (prevState) => dispatch => {\n    dispatch({\n        ...prevState,\n        type: INCR_I,\n        i: prevState.i + 1,\n    });\n};\nexport const addMessageAction = (prevState, newMessage) => dispatch => {\n    dispatch({\n        ...prevState,\n        type: ADD_MESSAGE ,\n        messages: [\n            ...prevState.messages,\n            newMessage,\n        ]\n    });\n};\n","import React, { Component } from 'react';\nimport './ConversationList.css';\nimport './ConversationListItem.css';\nimport {withRouter} from \"react-router\";\nimport {connect} from \"react-redux\";\nimport {updateSuitorAction} from \"../../../redux/action/messenger-action\";\n\nclass ConversationList extends Component {\n    selectSuitor = (e, suitorId) => {\n        this.props.dispatch(updateSuitorAction(this.props.messenger, suitorId, this.props.login.id))\n    };\n    people = () => (\n        <>\n            {this.props.matchs.map((person) => (\n                <div\n                    className=\"conversation-list-item\"\n                    key={person.NodeIdentity}\n                    onClick={e => this.selectSuitor(e, person.NodeIdentity)}\n                >\n                    <img className=\"conversation-photo\" src={person.Properties.img1} alt=\"conversation\" />\n                    <div className=\"conversation-info\">\n                        <h1 className=\"conversation-title\">{person.Properties.name}</h1>\n                    </div>\n                </div>\n            ))}\n        </>\n    );\n    render() {\n        if (this.props.messenger.suitorId === -1) {\n            return null\n        } else {\n            return (\n                <div className=\"conversation-list\">\n                    {this.people()}\n                </div>\n            );\n        }\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        matchs: state.matchs,\n        login: state.login,\n        messenger: state.messenger,\n    };\n};\n\nexport default withRouter(connect(mapStateToProps)(ConversationList))\n","import React, { Component } from 'react';\nimport moment from 'moment';\nimport './Message.css';\n\nexport default class Message extends Component {\n  render() {\n    const {\n      data,\n      isMine,\n      startsSequence,\n      endsSequence,\n      showTimestamp\n    } = this.props;\n    const friendlyTimestamp = moment(data.timestamp).format('LLLL');\n    return (\n      <div className={[\n        'message',\n        `${isMine ? 'mine' : ''}`,\n        `${startsSequence ? 'start' : ''}`,\n        `${endsSequence ? 'end' : ''}`\n      ].join(' ')}>\n        {\n          showTimestamp &&\n            <div className=\"timestamp\">\n              { friendlyTimestamp }\n            </div>\n        }\n\n        <div className=\"bubble-container\">\n          <div className=\"bubble\" title={friendlyTimestamp}>\n            { data.message }\n          </div>\n        </div>\n      </div>\n    );\n  }\n}","import React, { Component } from 'react';\nimport './MessageList.css';\nimport {withRouter} from \"react-router-dom\";\nimport connect from \"react-redux/es/connect/connect\";\nimport {Input,} from 'semantic-ui-react';\nimport {incrementMessageAction} from \"../../../redux/action/messenger-action\";\n\nlet rand = function() {\n    return Math.random().toString(36).substr(2); // remove `0.`\n};\n\n\nclass MessageInput extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            new: \"\",\n        };\n        this.send = this.send.bind(this);\n        this.keyDown = this.keyDown.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n    }\n    keyDown = (e) => {\n        if (e.key === 'Enter') {\n            this.send(e);\n        }\n    };\n    send = (e) => {\n        if (/\\S/.test(this.state.new)) {\n            const token = localStorage.getItem('jwt');\n            const msg = {\n                id: rand(),\n                token: token,\n                msg: this.state.new,\n                author: this.props.login.id,\n                timestamp: new Date().getTime(),\n                to: this.props.messenger.suitorId,\n            };\n            const json = JSON.stringify(msg);\n            this.props.messenger.ws.send(json);\n            this.props.dispatch(incrementMessageAction(this.props.messenger));\n            this.setState({new: \"\"});\n        }\n    };\n    handleChange = (e, data) => {\n        this.setState({[data.name]: data.value});\n    };\n    render() {\n        return(\n            <Input\n                style={{\n                    position:\"fixed\",\n                    bottom: \"0px\",\n                    width: \"70%\",\n                }}\n                fluid\n                placeholder='Write your message here...'\n                type={\"text\"}\n                name={\"new\"}\n                value={this.state.new}\n                onChange={this.handleChange}\n                onKeyDown={e => this.keyDown(e)}\n                autoComplete={'off'}\n                label={{\n                    color: \"blue\",\n                    icon: \"send\",\n                    onClick: e => this.send(e),\n                    position: \"right\"\n                }}\n                labelPosition='right'\n            />\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        people: state.people,\n        login: state.login,\n        messenger: state.messenger,\n    };\n};\n\nexport default withRouter(connect(mapStateToProps)(MessageInput))","import React, { Component } from 'react';\nimport Message from '../Message';\nimport './MessageList.css';\nimport {withRouter} from \"react-router-dom\";\nimport connect from \"react-redux/es/connect/connect\";\nimport {Segment} from 'semantic-ui-react';\nimport MessageInput from \"./message-input\";\nimport {addMessageAction, incrementMessageAction} from \"../../../redux/action/messenger-action\";\n\n\nclass MessageList extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            new: \"\",\n            i : 0,\n        };\n    }\n    componentDidMount() {\n        this.scrollToBottom()\n    }\n    renderMessages = () => (\n        <>\n            {this.props.messenger.messages.map((msg) => (\n                <Message\n                    key={msg.id}\n                    isMine={msg.author === this.props.login.id}\n                    startsSequence={true}\n                    endsSequence={false}\n                    showTimestamp={true}\n                    data={msg}\n                />\n            ))}\n        </>\n    );\n    componentWillUpdate(nextProps, nextState, nextContext) {\n        nextProps.messenger.ws.onmessage = (res) => {\n            const json = res.data;\n            const msg = JSON.parse(json);\n            if (nextProps.login.id !== msg.author) {\n                nextProps.dispatch(incrementMessageAction(nextProps.messenger));\n            }\n            const newMessage = {\n                id: msg.id,\n                author: msg.author,\n                message: msg.msg,\n                timestamp: msg.timestamp,\n                to: nextProps.people.suitorId,\n            };\n            nextProps.dispatch(addMessageAction(nextProps.messenger, newMessage))\n        };\n    }\n    componentDidUpdate () {\n        this.scrollToBottom();\n    }\n    scrollToBottom() {\n        this.el.scrollIntoView({ behavior: 'smooth' });\n    }\n    render() {\n        return(\n            <div className=\"message-list\">\n                <Segment className=\"message-list-container\">{this.renderMessages()}</Segment>\n                <div style={{padding: \"10px\"}} ref={el => { this.el = el; }} />\n                <MessageInput/>\n\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        people: state.people,\n        login : state.login,\n        messenger: state.messenger,\n    };\n};\n\nexport default withRouter(connect(mapStateToProps)(MessageList))","import {LOAD_MATCHS} from './types-action';\nimport {updateSuitorAction} from \"./messenger-action\";\nimport env from \"../../env\";\n\nexport const getMatchsAction = (messenger, userId) => dispatch => {\n    let init = {\n        method: 'GET',\n        headers:{\n            'Authorization': localStorage.getItem('jwt'),\n        }\n    };\n    fetch(env.api + '/matchs', init)\n        .then(res => {\n                switch (res.status) {\n                    case 202:\n                        localStorage.removeItem('jwt');\n                        res.json().then(json =>{\n                        });\n                        break;\n                    case 201:\n                        res.json().then(json =>{\n                        });\n                        break;\n                    case 200:\n                        res.json().then(data => {\n                            dispatch({\n                                type: LOAD_MATCHS,\n                                data: data,\n                            });\n                            dispatch(updateSuitorAction(messenger, data[0].NodeIdentity, userId));\n                        });\n                        break;\n                    default:\n                        break\n                }\n            }\n        )\n};\n","import React, { Component } from 'react';\nimport './ConversationList.css';\nimport './ConversationListItem.css';\nimport {withRouter} from \"react-router\";\nimport {connect} from \"react-redux\";\nimport {updateSuitorAction} from \"../../../redux/action/messenger-action\";\n\nclass ConversationList extends Component {\n    selectSuitor = (e, suitorId) => {\n        this.props.dispatch(updateSuitorAction(this.props.messenger, suitorId, this.props.login.id))\n        this.props.toMsgList();\n    };\n    people = () => (\n        <>\n            {this.props.matchs.map((person) => (\n                <div\n                    className=\"conversation-list-item\"\n                    key={person.NodeIdentity}\n                    onClick={e => this.selectSuitor(e, person.NodeIdentity)}\n                >\n                    <img className=\"conversation-photo\" src={person.Properties.img1} alt=\"conversation\" />\n                    <div className=\"conversation-info\">\n                        <h1 className=\"conversation-title\">{person.Properties.name}</h1>\n                    </div>\n                </div>\n            ))}\n        </>\n    );\n    render() {\n        return (\n            <div className=\"conversation-list\">\n                {this.people()}\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        matchs: state.matchs,\n        login: state.login,\n        messenger: state.messenger,\n    };\n};\n\nexport default withRouter(connect(mapStateToProps)(ConversationList))\n","import React, { Component } from 'react';\nimport moment from 'moment';\nimport './Message.css';\n\nexport default class Message extends Component {\n  render() {\n    const {\n      data,\n      isMine,\n      startsSequence,\n      endsSequence,\n      showTimestamp\n    } = this.props;\n    const friendlyTimestamp = moment(data.timestamp).format('LLLL');\n    return (\n      <div className={[\n        'message',\n        `${isMine ? 'mine' : ''}`,\n        `${startsSequence ? 'start' : ''}`,\n        `${endsSequence ? 'end' : ''}`\n      ].join(' ')}>\n        {\n          showTimestamp &&\n            <div className=\"timestamp\">\n              { friendlyTimestamp }\n            </div>\n        }\n\n        <div className=\"bubble-container\">\n          <div className=\"bubble\" title={friendlyTimestamp}>\n            { data.message }\n          </div>\n        </div>\n      </div>\n    );\n  }\n}","import React, { Component } from 'react';\nimport './MessageList.css';\nimport {withRouter} from \"react-router-dom\";\nimport connect from \"react-redux/es/connect/connect\";\nimport {\n    Input,\n    Button,\n    Grid,\n} from 'semantic-ui-react';\nimport {incrementMessageAction} from \"../../../redux/action/messenger-action\";\n\n\nclass MessageInput extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            new: \"\",\n        };\n        this.send = this.send.bind(this);\n        this.keyDown = this.keyDown.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n    }\n    keyDown = (e) => {\n        if (e.key === 'Enter') {\n            this.send(e);\n        }\n    };\n    send = (e) => {\n        if (/\\S/.test(this.state.new)) {\n            const token = localStorage.getItem('jwt');\n            const msg = {\n                id: this.props.messenger.i + 1,\n                token: token,\n                msg: this.state.new,\n                author: this.props.login.id,\n                timestamp: new Date().getTime(),\n                to: this.props.messenger.suitorId,\n            };\n            const json = JSON.stringify(msg);\n            this.props.messenger.ws.send(json);\n            this.props.dispatch(incrementMessageAction(this.props.messenger));\n            this.setState({new: \"\"});\n        }\n    };\n    handleChange = (e, data) => {\n        this.setState({[data.name]: data.value});\n    };\n    render() {\n        return(\n            <Grid\n                style={{\n                    position:\"fixed\",\n                    bottom: \"0px\",\n                    width: \"100%\",\n                }}\n            >\n                <Grid.Column>\n                    <Button\n                        style={{\n                            position:\"fixed\",\n                            bottom: \"0px\",\n                            left: \"0px\",\n                            width: \"14%\",\n                        }}\n                        icon={\"caret left\"}\n                        onClick={e => this.props.toConvList(e)}\n                    />\n                </Grid.Column>\n                <Grid.Column>\n                    <Input\n                        style={{\n                            position:\"fixed\",\n                            bottom: \"0px\",\n                            width: \"86%\",\n                            right: \"0px\",\n                        }}\n                        fluid\n                        placeholder='Write your message here...'\n                        type={\"text\"}\n                        name={\"new\"}\n                        value={this.state.new}\n                        onChange={this.handleChange}\n                        onKeyDown={e => this.keyDown(e)}\n                        autoComplete={'off'}\n                        label={{\n                            color: \"blue\",\n                            icon: \"send\",\n                            onClick: e => this.send(e),\n                            position: \"right\"\n                        }}\n                        labelPosition='right'\n                    />\n                </Grid.Column>\n            </Grid>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        people: state.people,\n        login: state.login,\n        messenger: state.messenger,\n    };\n};\n\nexport default withRouter(connect(mapStateToProps)(MessageInput))","import React, { Component } from 'react';\nimport Message from '../Message';\nimport './MessageList.css';\nimport {withRouter} from \"react-router-dom\";\nimport connect from \"react-redux/es/connect/connect\";\nimport {Segment} from 'semantic-ui-react';\nimport MessageInput from \"./message-input\";\nimport {addMessageAction, incrementMessageAction} from \"../../../redux/action/messenger-action\";\n\n\nclass MessageList extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            new: \"\",\n            i : 0,\n        };\n    }\n    componentDidMount() {\n        setTimeout(() => this.scrollToBottom(), 900)\n    }\n    renderMessages = () => (\n        <>\n            {this.props.messenger.messages.map((msg) => (\n                <Message\n                    key={msg.id}\n                    isMine={msg.author === this.props.login.id}\n                    startsSequence={true}\n                    endsSequence={false}\n                    showTimestamp={true}\n                    data={msg}\n                />\n            ))}\n        </>\n    );\n    componentDidUpdate () {\n        this.props.messenger.ws.onmessage = (res) => {\n            const json = res.data;\n            const msg = JSON.parse(json);\n            if (this.props.login.id !== msg.author) {\n                this.props.dispatch(incrementMessageAction(this.props.messenger));\n            }\n            const newMessage = {\n                id: msg.id,\n                author: msg.author,\n                message: msg.msg,\n                timestamp: msg.timestamp,\n                to: this.props.people.suitorId,\n            };\n            this.props.dispatch(addMessageAction(this.props.messenger, newMessage))\n        };\n        this.scrollToBottom();\n    }\n    scrollToBottom() {\n        this.el.scrollIntoView({ behavior: 'smooth' });\n    }\n    render() {\n        return(\n            <div className=\"message-list\">\n                <Segment className=\"message-list-container\">{this.renderMessages()}</Segment>\n                <div style={{padding: \"14px\"}} ref={el => { this.el = el; }} />\n                <MessageInput toConvList={this.props.toConvList}/>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        people: state.people,\n        login : state.login,\n        messenger: state.messenger,\n    };\n};\n\nexport default withRouter(connect(mapStateToProps)(MessageList))","import React, { Component } from 'react';\nimport ConversationList from './ConversationList';\nimport MessageList from './MessageList/message-list';\nimport './Messenger.css';\nimport {withRouter} from \"react-router\";\nimport {connect} from \"react-redux\";\n\nclass Switcher extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            convList: true,\n        };\n        this.toConvList = this.toConvList.bind(this);\n        this.toMsgList = this.toMsgList.bind(this);\n    }\n    toConvList () {\n        this.setState({convList: true})\n    }\n    toMsgList () {\n        this.setState({convList: false})\n    }\n    render() {\n        return (\n            <div className=\"messenger-mobile\">\n                {this.state.convList ?\n                    <div className=\"scrollable sidebar\"><ConversationList toMsgList={this.toMsgList}/></div> :\n                    <div className=\"scrollable content\"><MessageList toConvList={this.toConvList}/></div>\n                }\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        people: state.people,\n        login: state.login,\n        messenger: state.messenger,\n        matchs: state.matchs,\n    };\n};\n\nexport default withRouter(connect(mapStateToProps)(Switcher))\n","import React, { Component } from 'react';\nimport ConversationList from './messenger-components/ConversationList';\nimport MessageList from './messenger-components/MessageList/message-list';\nimport '../public/css/Messenger.css';\nimport {withRouter} from \"react-router\";\nimport {connect} from \"react-redux\";\nimport {\n    Segment,\n    Container,\n    Message,\n    Button,\n    Responsive,\n} from 'semantic-ui-react';\nimport store from \"../redux/store/matcha-store\";\nimport {getMatchsAction} from \"../redux/action/matchs-action\";\nimport Switcher from \"./messenger-mobile/switcher\";\n\nclass Messenger extends Component {\n    componentDidMount() {\n        store.dispatch(getMatchsAction(this.props.messenger, this.props.login.id));\n    }\n    componentWillMount() {\n        document.body.style.overflow = \"hidden\";\n    }\n    componentWillUnmount(){\n        document.body.style.overflow = \"\";\n    }\n    render() {\n\n        if (this.props.messenger.suitorId === -1) {\n            return (\n                <Container>\n                    <Segment>\n                        <Message\n                            error\n                            header=\"You don't have any match yet\"\n                            onClick={() => this.props.history.push('/')}\n                        />\n                        <Button\n                            onClick={() => this.props.history.push('/')}\n                        >Go back home</Button>\n                    </Segment>\n                </Container>\n            )\n        } else {\n            return (\n                <div>\n                    <Responsive {...Responsive.onlyMobile}>\n                        <Switcher mobile/>\n                    </Responsive>\n                    <Responsive {...Responsive.onlyTablet}>\n                        <div className=\"messenger\">\n                            <div className=\"scrollable sidebar\"><ConversationList/></div>\n                            <div className=\"scrollable content\"><MessageList/></div>\n                        </div>\n                    </Responsive>\n                    <Responsive {...Responsive.onlyComputer}>\n                        <div className=\"messenger\">\n                            <div className=\"scrollable sidebar\"><ConversationList/></div>\n                            <div className=\"scrollable content\"><MessageList/></div>\n                        </div>\n                    </Responsive>\n                </div>\n            );\n        }\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        people: state.people,\n        login: state.login,\n        messenger: state.messenger,\n        matchs: state.matchs,\n    };\n};\n\nexport default withRouter(connect(mapStateToProps)(Messenger))\n","import React, {Component} from 'react';\nimport {connect} from \"react-redux\";\nimport {withRouter} from 'react-router-dom';\nimport {Button, Container, Input, Message, Segment} from 'semantic-ui-react'\nimport env from \"../env\";\n\nclass Forgot extends Component {\n    constructor (props) {\n        super(props);\n        this.state = {\n            username: \"\",\n            done: false,\n        };\n        this.handleChange = this.handleChange.bind(this);\n        this.submit = this.submit.bind(this);\n        this.message = this.message.bind(this);\n    }\n    handleChange = (e, data) => {\n        this.setState({[data.name]: data.value});\n    };\n    submit = (e) => {\n        e.preventDefault();\n        const formData = new FormData(e.target);\n        formData.append(\"username\", this.state.username);\n        fetch(env.api + '/send_token', {\n            method: 'POST',\n            body: formData,\n        });\n        this.setState({done: true});\n    };\n    message () {\n        if (this.state.done) {\n            return (\n                <>\n                    <Container>\n                        <Segment>\n                            <Message>\n                                <p>\n                                    An email has been send to change your password.\n                                </p>\n                            </Message>\n                            <Button\n                                onClick={e =>this.props.history.push('/')}>Login</Button>\n                        </Segment>\n                    </Container>\n                </>\n\n            )\n        }\n    }\n    render () {\n        return (\n            <>\n                {this.message()}\n                <Container>\n                    <Segment>\n                        <Input\n                            fluid\n                            icon='user'\n                            type={\"text\"}\n                            iconPosition='left'\n                            placeholder='Username'\n                            name={\"username\"}\n                            value={this.state.username}\n                            onChange={this.handleChange}\n                        />\n                        <Button\n                            color='teal'\n                            onClick={this.submit}\n                        >Change Password</Button>\n                    </Segment>\n                </Container>\n            </>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n    };\n};\n\nexport default withRouter(connect(mapStateToProps)(Forgot))\n","import React, {Component} from \"react\";\nimport {withRouter} from \"react-router-dom\"\nimport {connect} from \"react-redux\";\nimport {getAge} from \"./modules/utils\";\nimport {\n    Segment,\n    Container,\n    Responsive,\n    Card,\n    Image,\n} from 'semantic-ui-react';\nimport {updateProfileAction} from \"../redux/action/app-action\";\nimport {getMatchsAction} from \"../redux/action/matchs-action\";\nimport {getPeopleAction} from \"../redux/action/people-action\";\n\nclass Matchs extends Component {\n    constructor(props) {\n        super(props);\n        this.handleClick = this.handleClick.bind(this);\n        props.dispatch(getMatchsAction(this.props.messenger, this.props.login.id));\n        if (!this.props.people.done) {\n            props.dispatch(getPeopleAction(props.people.filters, \"false\"));\n        }\n    }\n    componentDidMount() {\n    }\n    state = {\n        i : 0,\n    };\n    handleClick (e, id, i) {\n        let index = 0;\n        this.props.people.data.map(person => {\n            if (id === person.NodeIdentity) {\n                i = index;\n            }\n            index++;\n            return person;\n        });\n        this.props.dispatch(updateProfileAction(this.props.app, id, i));\n        this.props.history.push('/profile');\n    }\n    matchs = () => (\n        <>\n            {this.props.matchs.map((person, i) =>  (\n                  <Card key={person.NodeIdentity} onClick={e => this.handleClick(e, person.NodeIdentity, i)}>\n                      <Image src={person.Properties.img1} size='big'/>\n                      <Card.Content>\n                          <Card.Header>{person.Properties.username}</Card.Header>\n                          <Card.Meta>\n                              <span className='date'>{getAge(person.Properties.birthday).toString()}</span>\n                              <p>{person.Properties.firstname} {person.Properties.lastname}</p>\n                          </Card.Meta>\n                      </Card.Content>\n                  </Card>\n            ))}</>\n    );\n    render () {\n        return (\n            <Container className={\"gallery\"}>\n                <Responsive as={Segment} {...Responsive.onlyMobile}>\n                    <Card.Group itemsPerRow={1}>{this.matchs()}</Card.Group>\n                </Responsive>\n                <Responsive as={Segment} {...Responsive.onlyTablet}>\n                    <Card.Group itemsPerRow={3}>{this.matchs()}</Card.Group>\n                </Responsive>\n                <Responsive as={Segment} {...Responsive.onlyComputer}>\n                    <Card.Group itemsPerRow={4}>{this.matchs()}</Card.Group>\n                </Responsive>\n            </Container>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        matchs: state.matchs,\n        people: state.people,\n        app: state.app,\n        login : state.login,\n        messenger: state.messenger,\n    };\n};\n\nexport default withRouter(connect(mapStateToProps)(Matchs))\n","import React from \"react\";\nimport {withRouter} from \"react-router-dom\"\nimport {connect} from \"react-redux\";\nimport {Container, Segment} from \"semantic-ui-react\";\nimport env from \"../env\";\n\nclass Comp extends React.Component {\n    constructor (props) {\n        super(props);\n        this.state = {events: []};\n        let init = {\n            method: 'GET',\n            headers:{\n                'Authorization': localStorage.getItem('jwt'),\n            }\n        };\n        fetch(env.api + '/events/history/' + this.props.login.id , init)\n            .then(res => {\n                    switch (res.status) {\n                        case 201:\n                            break;\n                        case 202:\n                            localStorage.removeItem('jwt');\n                            res.json().then(json =>{\n                            });\n                            break;\n                        case 200:\n                            res.json().then(data => {\n                                this.setState({\n                                    events: data\n                                })\n                            });\n                            break;\n                        default:\n                            break;\n                    }\n                }\n            )\n    }\n    render () {\n        return (\n            <Container>\n                <Segment>\n                {this.state.events.map((e, i) => (\n                       <div key={i}>{e.message}</div>\n                ))}\n                </Segment>\n            </Container>\n            )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        login: state.login,\n        people: state.people,\n    };\n};\n\nexport default withRouter(connect(mapStateToProps)(Comp))\n","import React from \"react\";\nimport {withRouter} from \"react-router-dom\"\nimport {connect} from \"react-redux\";\nimport {Button, Container, Grid, Header, Input, Message, Segment} from \"semantic-ui-react\";\nimport {getJsonFromUrl} from \"./valid-email\";\nimport env from \"../env\";\n\nconst Mess = (props) => (\n    <>\n        <Message color={props.color}>\n            <p>\n                {props.text}\n            </p>\n        </Message>\n    </>\n);\n\nclass ResetPassword extends React.Component {\n    constructor (props) {\n        super(props);\n        this.state = {\n            done: false,\n            error: false,\n            reset_token: \"\",\n            password: \"\",\n            confirm: \"\",\n            username:\"\",\n        };\n        this.handleChange = this.handleChange.bind(this);\n        this.save = this.save.bind(this);\n    }\n    componentWillMount() {\n        let url = getJsonFromUrl(this.props.location.search);\n        this.setState({reset_token: url.reset_token});\n    }\n    save = (e) => {\n        let formData = new FormData();\n        formData.append('reset-token', this.state.reset_token);\n        formData.append('password', this.state.password);\n        formData.append('confirm', this.state.confirm);\n        formData.append('username', this.state.username);\n        fetch(env.api + '/reset_password', {\n            method: 'PUT',\n            body: formData,\n        })\n            .then(res => {\n                if (res.status === 200) {\n                    this.setState({done: true});\n                } else {\n                    res.json().then(json =>{\n                        this.setState({msg: json.err, error: true})\n                    });\n                }\n            });\n    };\n    handleChange = (e, data) => {\n        this.setState({[data.name]: data.value});\n    };\n    error () {\n        if (this.props.app.error) {\n            return (\n                <>\n                    <Mess color={\"red\"} text={this.state.msg}/>\n                </>\n            )\n        }\n    }\n    done() {\n            if (this.props.app.done) {\n            return (\n                <>\n                    <Mess color={\"green\"} text={\"Password has been changed\"}/>\n                </>\n            )\n        }\n    }\n    render () {\n        return (\n            <Container>\n                <Segment>\n                    <Grid key={\"grid_password\"}>\n                        <Grid.Column mobile={16} tablet={16} computer={16}>\n                            {this.error()}\n                            {this.done()}\n                        </Grid.Column>\n                        <Grid.Column mobile={16} tablet={8} computer={8}>\n                            <Grid.Row>\n                                <Header as={'h4'}>Username</Header>\n                            </Grid.Row>\n                            <Grid.Row>\n                                <Input fluid onChange={this.handleChange} name={\"username\"} value={this.state.username}/>\n                            </Grid.Row>\n                        </Grid.Column>\n                        <Grid.Column mobile={16} tablet={8} computer={8}>\n                            <Grid.Row>\n                                <Header as={'h4'}>New Password</Header>\n                            </Grid.Row>\n                            <Grid.Row>\n                                <Input fluid key={2} type={'password'} onChange={this.handleChange} name={\"password\"} value={this.state.password}/>\n                            </Grid.Row>\n                        </Grid.Column>\n                        <Grid.Column mobile={16} tablet={8} computer={8}>\n                            <Grid.Row>\n                                <Header as={'h4'}>Confirm Password</Header>\n                            </Grid.Row>\n                            <Grid.Row>\n                                <Input fluid key={3} type={'password'} onChange={this.handleChange} name={\"confirm\"} value={this.state.confirm}/>\n                            </Grid.Row>\n                        </Grid.Column>\n                        <Grid.Column mobile={16} tablet={8} computer={8}>\n                            <Button onClick={this.save} color={\"teal\"}>Change Password</Button>\n                        </Grid.Column>\n                    </Grid>\n                </Segment>\n            </Container>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        login: state.login,\n        people: state.people,\n    };\n};\n\nexport default withRouter(connect(mapStateToProps)(ResetPassword))\n","import React from \"react\";\nimport {BrowserRouter as Router, Route, Switch} from  'react-router-dom';\nimport {Provider} from 'react-redux';\nimport store from './redux/store/matcha-store';\n\nimport PrivateRoute from './react/modules/private-route';\nimport PublicRoute from './react/modules/public-route';\n\nimport Entry from \"./react/entry\";\nimport Home from \"./react/home\";\nimport User from \"./react/user\";\nimport Profile from \"./react/profile\";\nimport Login from \"./react/login\";\nimport Register from \"./react/register\";\nimport Error from \"./react/error\";\nimport Navigation from \"./react/navigation\";\nimport ValidEmail from './react/valid-email'\nimport Messenger from './react/messenger'\nimport Forgot from './react/forgot'\nimport Matchs from './react/matchs'\nimport History from './react/history'\nimport ResetPassword from './react/reset-password'\n\n\nconst App = () => (\n    <Provider store={store}>\n        <Router>\n            <React.Fragment>\n                <Navigation/>\n                <Switch>\n                    <Route exact path=\"/\" component={Entry}/>\n                    <PrivateRoute path=\"/home\" component={Home}/>\n                    <PrivateRoute path=\"/matchs\" component={Matchs}/>\n                    <PrivateRoute path=\"/history\" component={History}/>\n                    <PrivateRoute path=\"/user\" component={User}/>\n                    <PrivateRoute path=\"/profile\" component={Profile}/>\n                    <PrivateRoute path=\"/messenger\" component={Messenger}/>\n                    <Route path=\"/401\" component={Error}/>\n                    <Route path=\"/valid_email\" component={ValidEmail}/>\n                    <PublicRoute path=\"/login\" component={Login}/>\n                    <PublicRoute path=\"/register\" component={Register}/>\n                    <PublicRoute path=\"/forgot\" component={Forgot}/>\n                    <PublicRoute path=\"/reset-password\" component={ResetPassword}/>\n                    <PublicRoute component={Error}/>\n                </Switch>\n            </React.Fragment>\n        </Router>\n    </Provider>\n);\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('app'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}